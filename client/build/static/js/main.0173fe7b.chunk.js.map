{"version":3,"sources":["assets/sad_trombone.mp3","assets/applause.mp3","redux-helpers.js","firebaseConfig.js","firestore.js","components/Signout.js","utils/helpers.js","components/Card.js","components/GameOver.js","components/Board.js","config.js","components/Host.js","components/Modal.js","components/Guest.js","components/Lobby.js","components/Solo.js","components/Main.js","components/Rules.js","components/Login.js","components/SharedDevice.js","components/Stats.js","components/Routes.js","components/App.js","index.js"],"names":["module","exports","updateUser","user","type","payload","logOut","updateNickname","nickname","defaultUser","loading","reducers","state","action","newState","update","$set","store","createStore","combineReducers","composeWithDevTools","applyMiddleware","reduxThunk","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","firestore","Signout","dispatch","useDispatch","history","useHistory","style","marginBottom","className","onClick","auth","signOut","then","console","log","push","range","n","Array","keys","displaySet","tuple","matrix","rowSize","map","i","j","includes","join","countSets","board","debug","returnWhenFound","count","candidate","a","length","b","c","isSet","makeDeck","deck","forEach","s","f","card","selected","Number","nameThird","result","toString","trim","cardToggle","filter","reshuffle","newDeck","shuffle","slice","removeSelected","newCards","newBoard","index","indexOf","handleGoogleSignIn","provider","GoogleAuthProvider","signInWithPopup","token","credential","accessToken","catch","error","code","message","email","handleGoogleRedirect","signInWithRedirect","config","Squiggle","fill","color","strokeWidth","width","height","xmlns","id","y","x","display","overflow","stroke","transform","d","fillOpacity","strokeOpacity","Shape","shape","padding","ry","rx","cy","cx","points","Card","colors","0","1","2","white","getFill","drawShape","props","desc","split","this","number","patternTransform","patternUnits","x1","y1","x2","y2","key","viewBox","Component","GameOver","gameOver","myName","solo","useSelector","soundEffect","applause","sadTrombone","src","autoPlay","finalSound","marginTop","window","innerHeight","to","marginRight","Board","useState","sets","setSets","setWindowHeight","declarer","players","setFound","sharedDevice","useEffect","resize","debounce","addEventListener","removeEventListener","process","isEmpty","Object","borderColor","playersArray","info","name","topBoxes","Math","ceil","topPlayers","bottomPlayers","handlePlayerClick","score","maxWidth","handleCardClick","handleRedeal","turnTime","playingTo","firebaseRefs","Host","userReducer","userLoading","initialDeck","initialGameState","gameTitle","created","inputName","autoplay","setFullState","currentState","useRef","current","setState","processAction","newPlayers","setAndSendState","updateSelected","removeSet","newScores","newScore","$merge","setTimeout","game","delete","clearInterval","activeGameUpdater","markPointForDeclarer","timeDeclared","newSelected","onSubmit","e","preventDefault","autoFocus","placeholder","value","onChange","target","localStorage","setItem","collection","doc","set","lastUpdate","FieldValue","serverTimestamp","setInterval","actions","get","snapshot","data","onSnapshot","docChanges","change","Modal","children","popupVisible","visible","Guest","displayAnimation","animatedSet","setMyName","sendAction","add","gameName","match","params","updatedState","processUpdate","Fragment","resetLocalSelected","nameInput","Lobby","componentWillUnmount","unsubscribe","addGame","newGame","gamesRef","host","init","games","newGames","activeGames","g","updated","toMillis","now","Date","getTime","round","debugging","cpuDelay","calculateIntervalFromDifficulty","diff","isNaN","createGameState","logTime","msg","toFixed","initialState","you","cpu","gameStarted","cpuTurnInterval","cpuFound","startTime","Solo","handleStartGame","cpuTimer","cpuTurn","componentDidMount","difficulty","getItem","cpuAnimation","animateCpuChoice","cpuCopy","pop","updatePlayerScore","delta","expireDeclare","player_won","total_time","axios","post","uid","difficulty_level","winning_score","performDeclare","undeclareID","clearTimeout","removeSelectedCards","resetGame","cloneDeep","handleDeclare","ref","input","difficultyInput","min","max","orientation","tooltip","connect","Main","Rules","Login","getRedirectResult","declareTime","createPlayers","num","numPlayers","SharedDevice","clickerName","Stats","stats","setStats","getStats","response","row","games_played","games_won","Routes","exact","path","component","App","onAuthStateChanged","displayName","myUser","emailVerified","photoURL","isAnonymous","providerData","err","status","ReactDOM","render","document","getElementById"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,sC,g1BCKpC,IAGMC,EAAa,SAACC,GAAD,MAAW,CACnCC,KAJyB,cAKzBC,QAASF,IAGEG,EAAS,iBAAO,CAC3BF,KAAM,WAGKG,EAAiB,SAACC,GAAD,MAAe,CAC3CJ,KAZ6B,kBAa7BC,QAASG,IAGEC,EAAc,CAAEC,SAAS,EAAMP,KAAM,MAqB5CQ,EAAW,CACfR,KApBkB,WAAkC,IAAjCS,EAAgC,uDAAxBH,EAAaI,EAAW,uCACnD,OAAQA,EAAOT,MACb,IArBuB,cAsBrB,OAAO,EAAP,GACKQ,EADL,GAEKC,EAAOR,SAEd,IAzB2B,kBA0BzB,IAAMS,EAAWC,IAAOH,EAAO,CAC7BT,KAAM,CAAEK,SAAU,CAAEQ,KAAMH,EAAOR,YAEnC,OAAOS,EACT,IAAK,SACH,MAAO,CAAEJ,SAAS,EAAOP,KAAM,MACjC,QACE,OAAOS,KAaEK,EALDC,sBACZC,0BAAgBR,GAChBS,8BAAoBC,0BAAgBC,O,gBCtCvBC,G,YAXQ,CACrBC,OAAQ,0CACRC,WAAY,2BACZC,YAAa,kCACbC,UAAW,WACXC,cAAe,uBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBCJjBC,gBAAuBT,GAGvB,IAEeU,EAFGD,cCiCHE,MAxBf,WACE,IAAMC,EAAWC,cACXC,EAAUC,cAahB,OACE,yBAAKC,MAAO,CAAEC,aAAc,SAC1B,uBAAGC,UAAU,eACX,uBAAGC,QAdO,WACdV,IACGW,OACAC,UACAC,MAAK,WACJV,EAAS7B,KACTwC,QAAQC,IAAI,eACZV,EAAQW,KAAK,UAOb,e,eC7BKC,EAAQ,SAACC,GACpB,OAAO,YAAIC,MAAMD,GAAGE,SAGhBC,EAAa,SAACC,GAA+C,IAC7DC,EADoCC,EAAwB,uDAAN,EAGxDD,EADc,IAAZC,EACOP,EAAM,GAAGQ,KAAI,SAACC,GAOrB,OANYT,EAAM,GAAGQ,KAAI,SAACE,GACxB,OAAIL,EAAMM,SAAS,EAAIF,EAAIC,GAClB,IAEF,OAEEE,KAAK,OAGTZ,EAAM,GAAGQ,KAAI,SAACC,GAOrB,OANYT,EAAM,GAAGQ,KAAI,SAACE,GACxB,OAAIL,EAAMM,SAAS,EAAIF,EAAIC,GAClB,IAEF,OAEEE,KAAK,OAGpBf,QAAQC,IAAIQ,EAAOM,KAAK,QAgBbC,EAAY,SAACC,GAGxB,IAHoF,IAAD,yDAAP,GAAO,IAAlDC,aAAkD,aAAnCC,uBAAmC,SAC/EC,EAAQ,EACRC,EAAY,GACPC,EAAI,EAAGA,EAAIL,EAAMM,OAAS,EAAGD,IACpC,IAAK,IAAIE,EAAIF,EAAI,EAAGE,EAAIP,EAAMM,OAAS,EAAGC,IACxC,IAAK,IAAIC,EAAID,EAAI,EAAGC,EAAIR,EAAMM,OAAQE,IAEpC,GADAJ,EAAY,CAACJ,EAAMK,GAAIL,EAAMO,GAAIP,EAAMQ,IACnCC,EAAML,KACJH,GACFX,EAAW,CAACe,EAAGE,EAAGC,IAEpBL,IACID,GACF,OAAOC,EAMjB,OAAOA,GAGIO,EAAW,WACtB,IAAIC,EAAO,GAWX,OAVAzB,EAAM,GAAG0B,SAAQ,SAACJ,GAChBtB,EAAM,GAAG0B,SAAQ,SAACzB,GAChBD,EAAM,GAAG0B,SAAQ,SAACC,GAChB3B,EAAM,GAAG0B,SAAQ,SAACE,GAChB,IAAMC,EAAO,GAAKP,EAAIK,EAAI1B,EAAI2B,EAC9BH,EAAK1B,KAAK8B,eAKXJ,GAGIF,EAAQ,SAACO,GACpB,GAAwB,IAApBA,EAASV,OACX,OAAO,EAGT,IALgD,kBAI9BU,EAJ8B,GAIzCX,EAJyC,KAItCE,EAJsC,KAInCC,EAJmC,KAKvCb,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1B,IADYsB,OAAOZ,EAAEV,IAAMsB,OAAOV,EAAEZ,IAAMsB,OAAOT,EAAEb,KACzC,IAAM,EACd,OAAO,EAGX,OAAO,GAGIuB,EAAY,SAACb,EAAWE,GAInC,IAHA,IAEIY,EAAS,GACJxB,EAAI,EAAGA,EAAI,EAAGA,IACjBU,EAAEV,KAAOY,EAAEZ,GACbwB,GAAkBd,EAAEV,GAIpBwB,IADW,GADAF,OAAOZ,EAAEV,IAAMsB,OAAOV,EAAEZ,MACVyB,WAI7B,OAAOD,EAAOE,QAGHC,EAAa,SAACP,EAAcC,GACvC,OAAIA,EAASnB,SAASkB,GACbC,EAASO,QAAO,SAACf,GAAD,OAAOA,IAAMO,KAE9B,GAAN,mBAAWC,GAAX,CAAqBD,KAIZS,EAAY,SAAC,GAQxB,IAFoD,IALpDxB,EAKmD,EALnDA,MACAW,EAImD,EAJnDA,KAKIc,EAAUC,kBAAQ,GAAD,mBAAK1B,GAAL,YAAeW,KAE6B,IAA/DZ,EAAU0B,EAAQE,MAAM,EAAG,IAAK,CAAEzB,iBAAiB,KACnDH,EAAU0B,EAAS,CAAEvB,iBAAiB,IAAU,GAEhDuB,EAAUC,kBAAQD,GAEpB,MAAO,CACLd,KAAMc,EAAQE,MAAM,IACpB3B,MAAOyB,EAAQE,MAAM,EAAG,MAQfC,EAAiB,SAAC/E,GAQzB,IACImD,EAA0BnD,EAA1BmD,MAAOW,EAAmB9D,EAAnB8D,KAAMK,EAAanE,EAAbmE,SACfa,EAAWlB,EAAKgB,MAAM,EAAG,GAC3BG,EAAQ,YAAO9B,GACfyB,EAAUd,EAAKgB,MAAM,GAKzB,IAJAX,EAASJ,SAAQ,SAACJ,EAAGb,GACnB,IAAIoC,EAAQD,EAASE,QAAQxB,GAC7BsB,EAASC,GAASF,EAASlC,MAEE,IAAxBI,EAAU+B,IAAiB,OACON,EAAU,CAC/CxB,MAAO8B,EACPnB,KAAMc,IAFEA,EADsB,EAC5Bd,KAAsBmB,EADM,EACb9B,MAMrB,MAAO,CACLW,KAAMc,EACNzB,MAAO8B,EACPd,SAAU,KAIDiB,EAAqB,WAChC,IAAMC,EAAW,IAAIjE,OAAckE,mBACnClE,SAEGmE,gBAAgBF,GAChBpD,MAAK,SAASqC,GAEb,IAAIkB,EAAQlB,EAAOmB,WAAWC,YAE1BnG,EAAO+E,EAAO/E,KAClB2C,QAAQC,IAAIqD,EAAOjG,MAEpBoG,OAAM,SAASC,GAEEA,EAAMC,KACHD,EAAME,QAEbF,EAAMG,MAEDH,EAAMH,eAKhBO,EAAuB,WAClC,IAAMX,EAAW,IAAIjE,OAAckE,mBACnClE,SAEG6E,mBAAmBZ,GACnBpD,MAAK,SAASqC,GAEb,IAAIkB,EAAQlB,EAAOmB,WAAWC,YAE1BnG,EAAO+E,EAAO/E,KAClB2C,QAAQC,IAAIqD,EAAOjG,MAEpBoG,OAAM,SAASC,GAEEA,EAAMC,KACHD,EAAME,QAEbF,EAAMG,MAEDH,EAAMH,eCzNvBS,G,MACG,KADHA,EAEI,IAFJA,EAGS,EAHTA,EAIK,GA0BLC,EAAW,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACMC,EAAgBJ,EAC9C,OACE,yBAAKK,MAAM,MAAMC,OAAO,MAAMC,MAAM,8BAClC,2BACE,0BAAML,KAAK,OAAOM,GAAG,oBAAoBF,OAAO,MAAMD,MAAM,MAAMI,EAAE,KAAKC,EAAE,OAC3E,uBAAGC,QAAQ,OAAOC,SAAS,UAAUH,EAAE,IAAIC,EAAE,IAAIJ,OAAO,OAAOD,MAAM,OAAOG,GAAG,cAC7E,0BACAN,KAAK,OACLE,YAAY,IACZK,EAAE,IAAIC,EAAE,IAAIJ,OAAO,OAAOD,MAAM,WAGpC,2BACE,0BACEQ,OAAQV,EACRW,UAAU,qDAKVN,GAAG,QACHO,EAAE,uIAYJC,YAAY,OACVC,cAAc,OACdb,YAAaA,EACbF,KAAMA,OAOVgB,EAAQ,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOjB,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACtBiB,EAAwCpB,EAA/BM,EAA+BN,EAAvBK,EAAuBL,EAC9C,MAAc,MAAVmB,GACFC,GAAoB,EACb,kBAAC,EAAD,CAAUlB,KAAMA,EAAMC,MAAOA,KAExB,MAAVgB,EAEA,2BACE,6BACEN,OAAQV,EACRkB,IAAKf,EAAS,EAAIc,GAAW,EAC7BE,IAAKjB,EAAQ,EAAIe,GAAW,EAC5BG,GAAIjB,EAAS,EACbkB,GAAInB,EAAQ,EACZW,YAAY,OACZC,cAAc,OACdb,YAAaJ,EACbE,KAAMA,KAKA,MAAViB,EAEA,2BAGE,6BACEM,OAAM,UAAKL,EAAL,YAAgBd,EAAS,EAAzB,uBACJD,EAAQ,EADJ,YACSe,EADT,uBAEJf,EAAQe,EAFJ,YAEed,EAAS,EAFxB,uBAGJD,EAAQ,EAHJ,YAGSC,EAASc,GACxB3F,MAAO,CAAEyE,KAAMA,EAAMW,OAAQV,EAAOC,YAAaJ,WAVzD,GAkGa0B,G,2MAhFbC,OAAS,CACPC,EAAG,UACHC,EAAG,UACHC,EAAG,UACHC,MAAO,Q,EAGTC,QAAU,SAAC7B,EAAOD,GAChB,MAAa,MAATA,EACI,aAAN,OAAoBC,EAApB,YAA6BD,EAA7B,KAEW,MAATA,EACK,EAAKyB,OAAOxB,GAEd,EAAKwB,OAAOI,O,EAGrBE,UAAY,WAAO,IAAD,EACe,EAAKC,MAAMC,KAAKC,MAAM,IADrC,mBACPjC,EADO,KACAgB,EADA,KACOjB,EADP,KAEhB,OACE,kBAAC,WAAD,KACE,2BACE,6CACA,0BAAMA,KAAM,EAAKyB,OAAOI,MAAOvB,GAAG,oBAAoBC,EAAE,KAAKC,EAAE,OAC/D,uBACEC,QAAQ,OACRC,SAAS,UACTH,EAAE,IACFC,EAAE,IACFJ,OAAO,OACPD,MAAM,OACNG,GAAG,cAEH,0BAAMJ,YAAY,IAAIK,EAAE,IAAIC,EAAE,IAAIJ,OAAO,OAAOD,MAAM,WAG1D,kBAAC,EAAD,CAAOc,MAAOA,EAAOjB,KAAM,EAAK8B,QAAQ7B,EAAOD,GAAOC,MAAO,EAAKwB,OAAOxB,O,wEAKrE,IAAD,SACyBkC,KAAKH,MAAMC,KAAKC,MAAM,IAD/C,mBACAE,EADA,KACQnC,EADR,KACiBD,EADjB,KAEP,OACE,yBAAKvE,UAAU,aACb,yBAAK0E,MAAM,IAAIC,OAAO,KACpB,6BACEE,GAAE,eAAUL,EAAV,YAAmBD,GACrBG,MAAO,GACPC,OAAO,KACPiC,iBAAiB,iBACjBC,aAAa,kBAEb,0BACEC,GAAG,IACHC,GAAG,IACHC,GAAG,IACHC,GAAG,KACHnH,MAAO,CAAEoF,OAAQwB,KAAKV,OAAOxB,GAAQC,YAAa,SAKvDjE,EAAM+B,OAAOoE,GAAU,GAAG3F,KAAI,SAAAC,GAC7B,OACE,yBACEiG,IAAKjG,EACLjB,UAAU,QACVmH,QAAO,cAAS9C,EAAT,YAAyBA,GAChCO,MAAM,8BAEL,EAAK0B,qB,GAxEDc,a,wCChEJC,OAhDf,SAAkBd,GAAQ,IAChBe,EAA2Bf,EAA3Be,SAAUC,EAAiBhB,EAAjBgB,OAAQC,EAASjB,EAATiB,KAMlB9J,EADY+J,aAAY,SAACtJ,GAAD,OAAWA,EAAMT,QACzCA,KAER,OACE,yBAAKsC,UAAU,wBAAwBF,MAAO,CAAE6E,OAAQ,UARvC,WACjB,IAAM+C,EAAcJ,IAAaC,EAASI,KAAWC,KACrD,OAAO,2BAAOC,IAAKH,EAAaI,UAAQ,IAOrCC,GACD,yBAAK/H,UAAU,oBACb,yBACEA,UAAU,qCACVF,MAAO,CAAEkI,UAAgC,GAArBC,OAAOC,cAE3B,yBAAKlI,UAAU,gBACb,0BAAMA,UAAU,cAAhB,cACA,sCAAYsH,EAAZ,MAEF,yBAAKtH,UAAU,eACb,2BACE,kBAAC,IAAD,CAAMmI,GAAG,IAAIrI,MAAO,CAACsI,YAAa,SAAlC,aAGCZ,GAAiB,OAAT9J,GACP,0BAAMsC,UAAU,eACd,kBAAC,IAAD,CAAMmI,GAAG,UAAT,qB,+NC4HHE,OAxJf,SAAe9B,GAAQ,IAAD,EACI+B,mBAAS,MADb,mBACbC,EADa,KACPC,EADO,OAEoBF,mBAASL,OAAOC,aAFpC,mBAECO,GAFD,WAIlBnH,EAUEiF,EAVFjF,MACAgB,EASEiE,EATFjE,SACAL,EAQEsE,EARFtE,KACAyG,EAOEnC,EAPFmC,SACAC,EAMEpC,EANFoC,QACArB,EAKEf,EALFe,SACAC,EAIEhB,EAJFgB,OACAqB,EAGErC,EAHFqC,SACAC,EAEEtC,EAFFsC,aACArB,EACEjB,EADFiB,KAmBF,GAhBAsB,qBAAU,WACR,IAAMC,EAASC,oBAAS,WACtBP,EAAgBR,OAAOC,eACtB,KAIH,OAFAD,OAAOgB,iBAAiB,SAAUF,GAE3B,WACLd,OAAOiB,oBAAoB,SAAUH,MAEtC,IAEHD,qBAAU,WACRN,EAAQnH,EAAUC,EAAO,CAAEC,OAAO4H,OACjC,CAAC7H,IAEA8H,kBAAQT,KAAaU,OAAO1I,KAAKgI,GAASxH,SAASoG,GACrD,OAAO,KAGT,IAAM+B,EAAcZ,EAAWC,EAAQD,GAAUlE,MAAQmE,EAAQpB,GAAQ/C,MAEzE,GAAI8C,EACF,OAAO,kBAAC,GAAD,CAAUA,SAAUA,EAAUC,OAAQA,EAAQC,KAAMA,IAG7D,IAAM+B,EAAevI,cAAI2H,GAAS,SAACa,EAAMC,GACvC,O,2VAAO,EACLA,QACGD,MAIDE,EAAWC,KAAKC,KAAKL,EAAa3H,OAAS,GAC3CiI,EAAaN,EAAatG,MAAM,EAAGyG,GACnCI,EAAgBP,EAAatG,MAAMyG,GAEzC,OACE,kBAAC,WAAD,KACIb,EAYA,kBAAC,WAAD,KACE,yBAAK7I,UAAU,4BACZ6J,EAAW7I,KAAI,SAACwI,GACf,OACE,yBACExJ,UAAS,oCAA+BwJ,EAAKhF,MAApC,YACPgF,EAAKC,MAAQf,EAAW,gBAAkB,IAE5CzI,QAAS,WACPsG,EAAMwD,kBAAkBP,EAAKC,OAE/BvC,IAAKsC,EAAKC,MAEV,uBAAGzJ,UAAU,gBAAgBwJ,EAAKC,MAAQf,EAAW,OAASc,EAAKQ,WAIzE,yBAAKhK,UAAU,mCACZ8J,EAAc9I,KAAI,SAACwI,GAClB,OACE,yBACExJ,UAAS,oCAA+BwJ,EAAKhF,MAApC,YACPgF,EAAKC,MAAQf,EAAW,gBAAkB,IAE5CzI,QAAS,WACPsG,EAAMwD,kBAAkBP,EAAKC,OAE/BvC,IAAKsC,EAAKC,MAEV,uBAAGzJ,UAAU,gBAAgBwJ,EAAKC,MAAQf,EAAW,OAASc,EAAKQ,cAxC/E,yBAAKhK,UAAU,gBACb,6BACE,yBAAKA,UAAU,eACZ0I,EAAW,4CAAQA,GAAe,6CAASH,GAC5C,wBAAIvI,UAAU,8BACZ,2CAAiBiC,EAAKL,YA4ChC,yBAAK5B,UAAU,YAAYF,MAAO,CAAEmK,SAAU,IAAOhC,OAAOC,cAC1D,yBAAKlI,UAAU,OACZsB,EAAMN,KAAI,SAACqB,GACV,OACE,yBACE6E,IAAK7E,EACLrC,UAAS,iBAAYsC,EAASnB,SAASkB,GAAQiH,EAAc,IAC7DrJ,QAAS,WACPsG,EAAM2D,gBAAgB7H,KAGxB,yBACErC,UAAS,eACP4I,GAAgC,IAApBtG,EAASV,SAAiBU,EAASnB,SAASkB,GAAQ,SAAW,KAG7E,kBAAC,GAAD,CAAMmE,KAAMnE,UAMtB,yBAAKrC,UAAU,OACZgB,cAAI2H,GAAS,SAACa,EAAMC,GACnB,IAAKZ,EACH,OACE,yBAAK3B,IAAKuC,EAAMzJ,UAAU,aACxB,0BAAMA,UAAS,sBAAiBwJ,EAAKhF,QAClCiF,EADH,KACWD,EAAKQ,YAO1B,yBAAKhK,UAAU,OACZuG,EAAM4D,cACL,4BAAQlK,QAASsG,EAAM4D,aAAcnK,UAAU,OAA/C,eCpJCgG,GAAS,CACpB,wBACA,kBACA,kBACA,mBACA,yBACA,oB,6jBCkBF,IAAM3B,GAAS,CACb+F,SAAU,IACVpE,UACAqE,UAAW,GAGPC,GAAe,GA8RNC,OA5Rf,SAAchE,GACZ,IAAMiE,EAAc/C,aAAY,SAACtJ,GAAD,OAAWA,EAAMT,QACzCA,EAA+B8M,EAA/B9M,KAAe+M,EAAgBD,EAAzBvM,QACRyB,EAAWC,cAEX+K,EAAc1I,IACd2I,EAAgB,MACjB7H,EAAU,CACXb,KAAMyI,EAAYzH,MAAM,IACxB3B,MAAOoJ,EAAYzH,MAAM,EAAG,MAHV,CAKpBX,SAAU,KAXO,EAaWgG,mBAAS,IACrCK,QAAS,GACTiC,UAAW,GACXC,SAAS,EACTtD,OAAQ,GACRuD,UAAW,GACXlC,UAAU,EACVmC,UAAU,EACVrC,SAAU,KACVpB,UAAU,GACPqD,IAvBc,mBAaZxM,EAbY,KAaL6M,EAbK,KA0BbC,EAAeC,iBAAO/M,GAC5B8M,EAAaE,QAAUhN,EAEvB,IAAMiN,EAAW,SAAC9M,GAChB0M,EAAa,MACRC,EAAaE,QADN,GAEP7M,KA2GD+M,EAAgB,SAACjN,GAAY,IACzBT,EAAkBS,EAAlBT,KAAMC,EAAYQ,EAAZR,QADkB,EAEFqN,EAAaE,QAAnCxC,EAFwB,EAExBA,QAASD,EAFe,EAEfA,SACjB,OAAQ/K,GACN,IAAK,OACH,GAAI0L,OAAO1I,KAAKgI,GAASxH,SAASvD,EAAQ6L,MACxC,OAEF,IAAM6B,EAAU,MACX3C,EADW,eAEb/K,EAAQ6L,KAAO,CACdO,MAAO,EACPxF,MAAOH,GAAO2B,OAAOqD,OAAO1I,KAAKgI,GAAS/G,WAG9C2J,EAAgB,CAAE5C,QAAS2C,IAC3B,MACF,IAAK,QACE5C,GACH8C,EAAe5N,EAAQ0E,SAAU1E,EAAQ6L,MAE3C,MACF,QACE,SAIAgC,EAAY,SAACnJ,EAAUoG,GAC3B,GAAI3G,EAAMO,GAAW,CACnB,IAAMoJ,EAxDmB,SAAChD,GAC5B,IAAKA,EACH,MAAO,GAFgC,IAIjCC,EAAYsC,EAAaE,QAAzBxC,QACFgD,EAAWhD,EAAQD,GAAUsB,MAAQ,EACrCsB,EAAahN,IAAOqK,EAAD,eACtBD,EAAW,CACVkD,OAAQ,CACN5B,MAAO2B,MAIPrE,EAAWqE,GAAYtH,GAAOgG,WAAa3B,EAQjD,OAPIpB,GACFW,OAAO4D,YAAW,WAChBvB,GAAawB,KAAKC,SAClBC,cAAc/D,OAAOgE,qBACpB,KAGE,CACLtD,QAAS2C,EACThE,YAiCkB4E,CAAqBxD,GACjCrK,EAAQ,MACT4M,EAAaE,QADJ,CAEZvC,UAAU,EACVF,SAAU,KACVyD,aAAc,MACXT,EALS,GAMTxI,EAAe+H,EAAaE,UAEjCI,EAAgBlN,KAIdkN,EAAkB,SAACjN,GACvB8M,EAAS9M,GACTgM,GAAawB,KAAKxN,OAAOA,IAGrBkN,EAAiB,SAACY,EAAa1D,GACnC,IAAMrK,EAAW,CACfuK,SAAU7G,EAAMqK,GAChB9J,SAAU8J,EACV1D,YAEF6C,EAAgBlN,GACZA,EAASuK,UACXiD,YAAW,WACTJ,EAAUW,EAAa1D,KACtB,MAICpH,EAAyEnD,EAAzEmD,MAAOW,EAAkE9D,EAAlE8D,KAAMK,EAA4DnE,EAA5DmE,SAAUoG,EAAkDvK,EAAlDuK,SAAUC,EAAwCxK,EAAxCwK,QAASiC,EAA+BzM,EAA/ByM,UAAWC,EAAoB1M,EAApB0M,QAAStD,EAAWpJ,EAAXoJ,OAEtE,OAAIkD,EACK,aAGJ/M,EAaU,KAAX6J,EAEA,yBAAKvH,UAAU,aACb,kBAAC,EAAD,MACA,oDACA,0BAAMqM,SA7HU,SAACC,GACrBA,EAAEC,iBACFnB,EAAS,CACP7D,OAAQ7J,EAAKK,SACb4K,QAAQ,eACLjL,EAAKK,SAAW,CACfiM,MAAO,EACPxF,MAAOH,GAAO2B,OAAO,SAuHrB,2BACEwG,WAAS,EACTC,YAAY,WACZC,MAAOhP,EAAKK,SACZ4O,SAAU,SAACL,GACT5M,EAAS5B,EAAewO,EAAEM,OAAOF,QACjCzE,OAAO4E,aAAaC,QAAQ,WAAYR,EAAEM,OAAOF,UAGrD,4BAAQ/O,KAAK,SAASqC,UAAU,OAAhC,WAIF,6BACE,2BACE,kBAAC,IAAD,CAAMmI,GAAG,KAAT,gBAOL0C,EAqBH,kBAAC,GAAD,CACEvJ,MAAOA,EACPW,KAAMA,EACNK,SAAUA,EACVoG,SAAUA,EACVwB,gBA7OoB,SAAC7H,GAAU,IACzBkF,EAAWpJ,EAAXoJ,OACR,IAAKpJ,EAAMuK,SAAU,CACnB,IAAM0D,EAAcxJ,EAAWP,EAAMlE,EAAMmE,UACvCP,EAAMqK,IACRZ,EAAeY,EAAa7E,GAE9B6D,EAAS,CACP9I,SAAU8J,MAuOZjC,aAlOiB,WACnB,IAAM9L,EAAWyE,EAAU3E,GAC3BoN,EAAgBlN,IAiOdsK,QAASA,EACTC,SAAUzK,EAAMyK,SAChBtB,SAAUnJ,EAAMmJ,SAChBC,OAAQpJ,EAAMoJ,SA9Bd,yBAAKvH,UAAU,aACb,+CACA,0BAAMqM,SArMa,SAACC,GACxBA,EAAEC,iBAD4B,IAEtBhF,EAAkCpJ,EAAlCoJ,OAAQjG,EAA0BnD,EAA1BmD,MAAOW,EAAmB9D,EAAnB8D,KAAMK,EAAanE,EAAbmE,SACzBsI,EAAYzM,EAAMyM,UACJ,KAAdA,IACFA,EAAS,UAAMrD,EAAN,YAEX+C,GAAawB,KAAOtM,EAAUuN,WAAW,SAASC,IAAIpC,GACtDN,GAAawB,KAAKmB,IAAI,CACpB3L,QACAW,OACAK,WACA4K,WAAY3N,IAASC,UAAU2N,WAAWC,oBAE5CnF,OAAOgE,kBAAoBhE,OAAOoF,aAAY,WAC5C/C,GAAawB,KAAKxN,OAAO,CACvB4O,WAAY3N,IAASC,UAAU2N,WAAWC,sBAE3C,KACH9C,GAAagD,QAAUhD,GAAawB,KAAKiB,WAAW,WACpDzC,GAAagD,QAAQC,MAAMnN,MAAK,SAACoN,GAC/BA,EAAStL,SAAQ,SAAC8K,GAChB3M,QAAQC,IAAI0M,EAAInI,GAAI,KAAMmI,EAAIS,cAIlCnD,GAAagD,QAAQI,YAAW,SAACF,GAC/BA,EAASG,aAAazL,SAAQ,SAAC0L,GAC7B,GAAoB,UAAhBA,EAAOjQ,KAAkB,CAC3B,IAAMS,EAASwP,EAAOZ,IAAIS,OAC1BpN,QAAQC,IAAIlC,GACZiN,EAAcjN,GACdkM,GAAagD,QAAQN,IAAIY,EAAOZ,IAAInI,IAAIkH,SAEtB,YAAhB6B,EAAOjQ,MACT0C,QAAQC,IAAI,mBAAoBsN,EAAOZ,IAAIS,cAKjDrC,EAAS,CACPP,SAAS,MA6JL,2BACE4B,YAAW,UAAKlF,EAAL,WACXoF,SAAU,SAACL,GACTlB,EAAS,CAAER,UAAW0B,EAAEM,OAAOF,SAEjCA,MAAO9B,IAET,4BAAQjN,KAAK,SAASqC,UAAU,OAAhC,YAnDJ,yBAAKA,UAAU,aACb,gFACA,2BACE,4BAAQC,QAASkE,EAAsBnE,UAAU,OAAjD,cCzOK6N,GARD,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SAAmBC,EAAmB,EAA5BC,QACzB,OACE,yBAAKhO,UAAU,sBAAsBF,MAAO,CAAEkF,QAAS+I,EAAe,QAAU,SAC9E,yBAAK/N,UAAU,iBAAiB8N,K,6jBC2LvBG,OAlLf,SAAe1H,GAAQ,IAAD,OACdiE,EAAc/C,aAAY,SAACtJ,GAAD,OAAWA,EAAMT,QACzCA,EAAS8M,EAAT9M,KACFgC,EAAWC,cAHG,EAKU2I,mBAAS,CACrCyF,cAAc,EACdnF,UAAU,EACVsF,kBAAkB,EAClBC,YAAa,GACbzF,SAAU,GACVzG,KAAM,GACNX,MAAO,GACPgB,SAAU,KAbQ,mBAKbnE,EALa,KAKN6M,EALM,OAeQ1C,mBAAS,IAfjB,mBAebf,EAfa,KAeL6G,EAfK,OAgBoB9F,mBAAS,IAhB7B,mBAgBbgC,EAhBa,KAkBdc,GAlBc,KAkBH,SAAC9M,GAChB0M,EAAa,MACR7M,EADO,GAEPG,MAwDD+P,EAAa,SAACjQ,GAClBkM,EAAagD,QAAQgB,IAArB,MACKlQ,EADL,CAEEyM,QAAStL,IAASC,UAAU2N,WAAWC,sBAU3CtE,qBAAU,WACRsC,EAAS,CACP2C,cAAc,MAEf,CAAC5P,EAAMuK,WAEVI,qBAAU,WAAO,IACPyF,EAAahI,EAAMiI,MAAMC,OAAzBF,SACRjE,EAAawB,KAAOtM,EAAUuN,WAAW,SAASC,IAAIuB,GACtDjE,EAAawB,KAAK4B,YAAW,SAACV,IAlCV,SAACA,GACrB,IAAM0B,EAAY,MAAQ1B,EAAIS,QAC1BrE,kBAAQsF,KAGZrO,QAAQC,IAAI,WAAYoO,GACxBtD,EAAS,MACJsD,EADG,CAENX,cAAc,MA2BdY,CAAc3B,MAEhB1C,EAAagD,QAAUhD,EAAawB,KAAKiB,WAAW,aAOnD,IA7GiB,IA+GZzL,EAA2DnD,EAA3DmD,MAAOW,EAAoD9D,EAApD8D,KAAMK,EAA8CnE,EAA9CmE,SAAUoG,EAAoCvK,EAApCuK,SAAUC,EAA0BxK,EAA1BwK,QAASoF,EAAiB5P,EAAjB4P,aAClD,OAAIvD,EAAYvM,QACP,aAEJP,EAeA6J,EAwBH,kBAAC,IAAMqH,SAAP,KACE,kBAAC,GAAD,CAAOZ,QAASD,GACd,uBAAG/N,UAAU,0BAAb,QACA,yBAAKA,UAAU,YACb,yBAAKA,UAAU,gBAAgBF,MAAO,CAAE4E,MAAO,WAGnD,kBAAC,GAAD,CACEpD,MAAOA,EACPW,KAAMA,EACNK,SAAUA,EACVoG,SAAUA,EACVwB,gBA7IkB,SAAC7H,GAEvB,IADqBlE,EAAbuK,SACR,CAGA,IAAM0D,EAAcxJ,EAAWP,EAAMlE,EAAMmE,UACrCjE,EAAW,GACjB,GAA2B,IAAvB+N,EAAYxK,OACd,GAAIG,EAAMqK,GAKRiC,EAJe,CACb1Q,KAAM,QACNC,QAAS,CAAE0E,SAAU8J,EAAa3C,KAAMlC,KAG1ClJ,EAAS0P,cAAe,OAExB1N,QAAQC,IAAI,qBACZ2H,OAAO4D,WAAW,EAAKgD,mBAAoB,KAI/CzD,EAAS,MACJ/M,EADG,CAENiE,SAAU8J,OAwHRzD,QAASA,EACTC,SAAUzK,EAAMyK,SAChBtB,SAAUnJ,EAAMmJ,SAEhBC,OAAQA,KAxCV,yBAAKvH,UAAU,aACb,kBAAC,EAAD,MAEA,+CACA,0BAAMqM,SApFU,SAACC,GACrBA,EAAEC,iBACF,IAAMuC,EAAYpR,EAAKK,SACnBqL,kBAAQ0F,KAGZV,EAAUU,GACVT,EAAW,CACT1Q,KAAM,OACNC,QAAS,CAAE6L,KAAMqF,QA4Eb,2BACEtC,WAAS,EACT7O,KAAK,OACL8O,YAAY,YACZC,MAAOhP,EAAKK,SACZ4O,SAAU,SAACL,GACT5M,EAAS5B,EAAewO,EAAEM,OAAOF,QACjCzE,OAAO4E,aAAaC,QAAQ,WAAYR,EAAEM,OAAOF,UAGrD,2BAAO1M,UAAU,MAAMrC,KAAK,SAAS+O,MAAM,WA9B/C,yBAAK1M,UAAU,aACb,gFACA,2BACE,4BAAQC,QAASsD,EAAoBvD,UAAU,OAA/C,YAIF,2BACE,kBAAC,IAAD,CAAMmI,GAAG,UAAT,W,mOCzCK4G,G,YA3Fb,WAAYxI,GAAQ,IAAD,uBACjB,4CAAMA,KA6BRyI,qBAAuB,WACrB,EAAKC,eA/BY,EAkCnBC,QAAU,SAAA5C,GACRA,EAAEC,iBADW,IAEL4C,EAAY,EAAKhR,MAAjBgR,QACR,EAAKC,SAASpC,IAAImC,GAASlC,IAAI,CAC7BoC,KAAM,UAtCS,OAIjB,EAAKlR,MAAQ,CACXsL,KAAM,GACN0F,QAAS,MACTG,MAAM,EACNC,MANY,IAFG,E,iFAYE,IAAD,OAClB7I,KAAK0I,SAAW5P,EAAUuN,WAAW,SAErCrG,KAAKuI,YAAcvI,KAAK0I,SAAS1B,YAAW,SAAAF,GAC1C,IAAMgC,EAAW,GACjBhC,EAAStL,SAAQ,SAAA8K,GACfwC,EAASjP,K,2VAAT,EACEkJ,KAAMuD,EAAInI,IACPmI,EAAIS,YAGX,EAAKrC,SAAS,CACZkE,MAAM,EACNC,MAAOC,S,+BAiBH,IAAD,EACiB9I,KAAKvI,MAArBoR,EADD,EACCA,MACR,IAFO,EACQD,KAEb,OAAO,KAET,IAAMG,EAAcF,EAAM1M,QAAO,SAAA6M,GAAM,IAC7BxC,EAAewC,EAAfxC,WACR,IAAKA,EACH,OAAO,EAET,IAAMyC,EAAUzC,EAAW0C,WACrBC,GAAM,IAAIC,MAAOC,UAEvB,OADYpG,KAAKqG,OAAOH,EAAMF,GAAW,KAC5B,MAEf,OACE,yBAAK3P,UAAU,YAAYF,MAAO,CAAE6E,OAAQ,UAClB,IAAvB8K,EAAY7N,OACX,kBAAC,WAAD,KACE,yBAAK5B,UAAU,OACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,kBAAkBF,MAAO,CAAEkI,UAAgC,GAArBC,OAAOC,cAC1D,0BAAMlI,UAAU,cAAhB,yCAEF,kBAAC,IAAD,CAAMmI,GAAG,KAAT,WAKN,kBAAC,WAAD,KACE,wBAAInI,UAAU,gBAAd,mBACA,yBAAKA,UAAU,oBACZyP,EAAYzO,KAAI,SAAC8K,EAAM7K,GACtB,OACE,yBAAKjB,UAAU,YAAYkH,IAAK4E,EAAKrC,MACnC,kBAAC,IAAD,CAAMtB,GAAE,iBAAY2D,EAAKrC,OACvB,yBAAKzJ,UAAU,cAAc8L,EAAKrC,kB,GA/EpCrC,a,qmBCcpB,IAAM6I,IAAY,EAEZ5L,GAAS,CACb+F,SAAU,IACVpE,UACAqE,UAAW,EACX6F,SAAU,MAGNC,GAAkC,SAAC/K,GACvC,IAAIgL,EAAO7N,OAAO6C,GAKlB,OAJI7C,OAAO8N,MAAMD,KACfA,EAAO,GAEQ,MAAS,EAAIA,IAI1BE,GAAkB,WACtB,IAAM5F,EAAc1I,IACpB,OAAO,MACFc,EAAU,CACXb,KAAMyI,EAAYzH,MAAM,IACxB3B,MAAOoJ,EAAYzH,MAAM,EAAG,MAHhC,CAKEX,SAAU,MAIRiO,GAAU,WAAe,IAAdC,EAAa,uDAAP,GACfpL,EAAI,IAAI0K,KACR3N,EAAKiD,EAAE2K,UAAF,SAAc,GAAM,GAAK,IACpC1P,QAAQC,IAAIkQ,EAAKrO,EAAEsO,QAAQ,KAGvBC,GAAe,CACnB/H,QAAS,CACPgI,IAAK,CACH3G,MAAO,EACPxF,MAAOH,GAAO2B,OAAO,IAEvB4K,IAAK,CACH5G,MAAO,EACPxF,MAAOH,GAAO2B,OAAO,KAGzB6K,aAAa,EACbpH,KAAM,MACNb,UAAU,EACVF,SAAU,KACVyD,aAAc,KACd7E,UAAU,EACVwJ,gBAAiB,IACjBC,SAAU,GACVC,UAAW,MAGPC,G,YACJ,WAAY1K,GAAQ,IAAD,8BACjB,4CAAMA,KAOR2K,gBAAkB,SAAC5E,GACjBA,EAAEC,iBACF,EAAKnB,SAAS,CACZyF,aAAa,EACbG,UAAW,IAAIlB,OAGjBzP,QAAQC,IAAR,sBAA2B,EAAKnC,MAAM2S,gBAAtC,QACAjF,YAAW,WACT,EAAKsF,SAAW9D,YAAY,EAAK+D,QAAS,EAAKjT,MAAM2S,mBACpDzM,GAAO6L,WAlBO,EAqBnBmB,kBAAoB,WAClB,IAAMC,EAAarJ,OAAO4E,aAAa0E,QAAQ,mBAAqB,IAC9DT,EAAkBX,GAAgCmB,GACxD,EAAKlG,SAAS,CACZkG,aACAR,qBA1Be,EA8BnB9B,qBAAuB,WACrBhD,cAAc,EAAKmF,WA/BF,EAkCnBC,QAAU,WAAO,IAAD,EACwB,EAAKjT,MAAnCmD,EADM,EACNA,MAAOoH,EADD,EACCA,SAAUpB,EADX,EACWA,SACzB,IAAIoB,IAAYpB,EAAhB,CAGI2I,IACFM,GAAQ,SANI,MAQCvN,kBAAQ1B,GAAO2B,MAAM,EAAG,GARzB,mBAQPtB,EARO,KAQJE,EARI,KASRC,EAAIU,EAAUb,EAAGE,GACnBP,EAAMH,SAASW,KACjB,EAAKsJ,SAAS,CACZ1C,SAAU,MACVpG,SAAU,CAACX,GACXoP,SAAU,CAAClP,EAAGC,GACd8G,UAAU,IAEZoD,cAAc,EAAKmF,UACnB,EAAKK,aAAenE,YAAY,EAAKoE,iBAAkB,QApDxC,EAwDnBA,iBAAmB,WAAO,IAAD,EACQ,EAAKtT,MAA5BmE,EADe,EACfA,SAAUyO,EADK,EACLA,SACZW,EAAO,YAAOX,GACd3E,EAAW,sBAAO9J,GAAP,CAAiBoP,EAAQC,QAC1C,EAAKvG,SAAS,CACZ2F,SAAUW,EACVpP,SAAU8J,IAEe,IAAvBA,EAAYxK,SACdoK,cAAc,EAAKwF,cACnB,EAAKhG,eAAeY,EAAa,SAlElB,EAsEnBwF,kBAAoB,SAACnI,EAAcoI,GAAmB,IAC5ClJ,EAAY,EAAKxK,MAAjBwK,QACFgD,EAAWhD,EAAQc,GAAMO,MAAQ6H,EAQvC,MAAO,CAPYvT,IAAOqK,EAAD,eACtBc,EAAO,CACNmC,OAAQ,CACN5B,MAAO2B,MAIOA,IAhFH,EAmFnBmG,cAAgB,WAAO,IAAD,EACW,EAAK3T,MAA5BuK,EADY,EACZA,SAAUpG,EADE,EACFA,SAClB,IAAKP,EAAMO,GAAW,CAAC,IAAD,EACC,EAAKsP,kBAAkBlJ,GAAW,IAAhD4C,EADa,oBAEpB,EAAKF,SAAS,CACZzC,QAAS2C,EACT5C,SAAU,KACVyD,aAAc,KACd7J,SAAU,OA3FG,EAgGnB4J,qBAAuB,SAACxD,GAAc,IAAD,EACJ,EAAKkJ,kBAAkBlJ,EAAU,GAD7B,mBAC5B4C,EAD4B,KAChBK,EADgB,KAE3BjO,EAAS,EAAK6I,MAAMiE,YAApB9M,KACF4J,EAAWqE,GAAYtH,GAAOgG,WAAa3B,EAC3CrK,EAAW,CACfsK,QAAS2C,EACThE,YAEF,GAAIA,GAAqB,OAAT5J,EAAe,CAC7B,IAAMqU,EAAyB,OAAZrJ,EAAoB,EAAI,EACrCsJ,EAAarI,KAAKqG,QAAO,IAAIF,MAAOC,UAAY,EAAK5R,MAAM6S,UAAUjB,WAAa,KACxFkC,KACGC,KAAK,YAAa,CACjBC,IAAKzU,EAAKyU,IACVH,aACAD,aACAK,iBAAkB,EAAKjU,MAAMmT,WAC7Be,cAAe1G,IAEhBvL,MAAK,WACJC,QAAQC,IAAI,gBAGlB,EAAK8K,SAAS/M,IAvHG,EA0HnBiU,eAAiB,SAAC5J,GAChB,IAAK,EAAKvK,MAAMuK,SAAU,CACxB,IACMpK,EAAS,CACboK,WACAyD,cAHc,IAAI2D,MAAOC,WAK3B,EAAK3E,SAAS9M,GAEd,EAAKiU,YAAc1G,YAAW,WAC5B,EAAKiG,kBACJzN,GAAO+F,YArIK,EAyInBoB,eAAiB,SAACY,EAA4B1D,GAC5C,IAAMrK,EAAW,CACfuK,SAAU7G,EAAMqK,GAChB9J,SAAU8J,EACV1D,YAEErK,EAASuK,WACX4J,aAAa,EAAKD,aAClB1G,YAAW,WACT,EAAKJ,cACJ,MAEL,EAAKL,SAAS/M,IArJG,EAwJnB6L,gBAAkB,SAAC7H,GAAU,IAAD,EACW,EAAKlE,MAAlCyK,EADkB,EAClBA,SAAUF,EADQ,EACRA,SAAUe,EADF,EACEA,KAC5B,IAAKb,GAAyB,QAAbF,EAAoB,CACnC,IAAM0D,EAAcxJ,EAAWP,EAAM,EAAKlE,MAAMmE,UAC3CoG,GACH,EAAK4J,eAAe7I,GAEtB,EAAK2B,SAAS,CACZ9I,SAAU8J,IAERrK,EAAMqK,IACR,EAAKZ,eAAeY,EAAa,SAnKpB,EAwKnBjC,aAAe,WACb,IAAM9L,EAAWyE,EAAU,EAAK3E,OAChC,EAAKiN,SAAS/M,IA1KG,EA6KnBoN,UAAY,WAAO,IAAD,EACe,EAAKtN,MAA5BuK,EADQ,EACRA,SAAUpG,EADF,EACEA,SAClB,GAAIP,EAAMO,GAAW,CACnBjC,QAAQC,IAAI,uBACZ,IACMjC,EAAQ,MADI,EAAK6N,qBAAqBxD,GAC9B,CAEZE,UAAU,EACVF,SAAU,KACVyD,aAAc,MACXsG,EAAoB,EAAKtU,QAE9B,EAAKiN,SAAS/M,GAEhB2N,cAAc,EAAKmF,UACnBtF,YAAW,WACT,EAAKsF,SAAW9D,YAAY,EAAK+D,QAAS,EAAKjT,MAAM2S,mBACpDzM,GAAO6L,WA9LO,EAiMnBwC,UAAY,WACV1G,cAAc,EAAKmF,UACnB,EAAK/F,SAAL,MACKuH,oBAAUjC,IADf,GAEKJ,QAnML,EAAKnS,MAAL,MACKwU,oBAAUjC,IADf,GAEKJ,MAJY,E,sEAyMT,IAAD,SACqE5J,KAAKvI,MAAzEmD,EADD,EACCA,MAAOW,EADR,EACQA,KAAMK,EADd,EACcA,SAAUoG,EADxB,EACwBA,SAAUC,EADlC,EACkCA,QAASkI,EAD3C,EAC2CA,YAC1CrG,GAFD,EACwD5B,SACvClC,KAAKH,MAArBiE,aACA9M,EAAS8M,EAAT9M,KACR,OAAI8M,EAAYvM,QACP,aAEJ4S,EAyDH,kBAAC,IAAMjC,SAAP,KACE,kBAAC,GAAD,CACEtN,MAAOA,EACPW,KAAMA,EACNK,SAAUA,EACVoG,SAAUA,EACVwB,gBAAiBxD,KAAKwD,gBACtB0I,cAAelM,KAAKkM,cACpBzI,aAAczD,KAAKyD,aACnBxB,QAASA,EACTC,SAAUlC,KAAKvI,MAAMyK,SACrBtB,SAAUZ,KAAKvI,MAAMmJ,SACrBC,OAAQb,KAAKvI,MAAMsL,KACnBiJ,UAAWhM,KAAKgM,UAChBlL,MAAM,KArER,yBAAKxH,UAAU,aACH,OAATtC,GAAiB,kBAAC,EAAD,MAClB,sDACA,wBAAIsC,UAAU,6BAAd,4BACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,0BAAMqM,SAAU3F,KAAKwK,iBACnB,kBAAC,KAAD,CACE2B,IAAK,SAACC,GACJ,EAAKC,gBAAkBD,GAEzBE,IAAK,EACLC,IAAK,EACLC,YAAY,aACZC,SAAS,EACTzG,MAAOnK,OAAOmE,KAAKvI,MAAMmT,YACzB3E,SAAU,SAAC2E,GACT,IAAMR,EAAkBX,GAAgCmB,GACxDrJ,OAAO4E,aAAaC,QAAQ,iBAAkBwE,GAC9C,EAAKlG,SAAS,CACZ0F,kBACAQ,kBAIN,2BAAO3T,KAAK,SAAS+O,MAAM,QAAQ1M,UAAU,UAGjD,yBAAKA,UAAU,OACb,yBAAKF,MAAO,CAAEkI,UAAW,QAAUhI,UAAU,WAC3C,2BACE,kBAAC,IAAD,CAAMmI,GAAG,UAAT,sBAEF,uBAAGrI,MAAO,CAAEkI,UAAW,SACrB,kBAAC,IAAD,CAAMG,GAAG,KAAT,uBAEAzK,GACA,kBAAC,WAAD,KACE,6BACA,oFAEA,2BACE,4BAAQuC,QAASkE,EAAsBnE,UAAU,OAAjD,qB,GA7PHoH,aAmSJgM,gBAJS,SAACjV,GAAD,MAAY,CAClCqM,YAAarM,EAAMT,QAGN0V,CAAyBnC,IC5TzBoC,OAhDf,WACE,OACE,yBAAKrT,UAAU,aACb,yBAAKA,UAAU,OACb,wBAAIA,UAAU,gBAAd,cAEF,yBAAKA,UAAU,OACb,yBAAKA,UAAU,iCACb,kBAAC,IAAD,CAAMmI,GAAG,SACP,yBAAKnI,UAAU,QACb,kBAAC,GAAD,CAAMwG,KAAK,WAGf,uBAAGxG,UAAU,gBAAb,eAEF,yBAAKA,UAAU,uBACb,kBAAC,IAAD,CAAMmI,GAAG,UACP,yBAAKnI,UAAU,QACb,kBAAC,GAAD,CAAMwG,KAAK,WAGf,uBAAGxG,UAAU,gBAAb,cAEF,yBAAKA,UAAU,uBACb,kBAAC,IAAD,CAAMmI,GAAG,SACP,yBAAKnI,UAAU,QACb,kBAAC,GAAD,CAAMwG,KAAK,WAGf,uBAAGxG,UAAU,gBAAb,iBCkJKsT,OAhLf,WACE,OACE,yBAAKtT,UAAU,mBACb,iDACA,2JAIA,yIAIA,qHACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,QACb,kBAAC,GAAD,CAAMwG,KAAK,WAGf,yBAAKxG,UAAU,UACb,yBAAKA,UAAU,QACb,kBAAC,GAAD,CAAMwG,KAAK,WAGf,yBAAKxG,UAAU,UACb,yBAAKA,UAAU,QACb,kBAAC,GAAD,CAAMwG,KAAK,WAGf,yBAAKxG,UAAU,UACb,yBAAKA,UAAU,QACb,kBAAC,GAAD,CAAMwG,KAAK,WAGf,yBAAKxG,UAAU,UACb,yBAAKA,UAAU,QACb,kBAAC,GAAD,CAAMwG,KAAK,WAGf,yBAAKxG,UAAU,UACb,yBAAKA,UAAU,QACb,kBAAC,GAAD,CAAMwG,KAAK,YAIjB,+FAEE,wBAAIxG,UAAU,mBACZ,qCACA,sCACA,qCACA,qCANJ,wEAUA,4HAES,4CAFT,OAEkC,+CAElC,mGACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,QACb,kBAAC,GAAD,CAAMwG,KAAK,WAER,IACP,yBAAKxG,UAAU,UACb,yBAAKA,UAAU,QACb,kBAAC,GAAD,CAAMwG,KAAK,WAGf,yBAAKxG,UAAU,UACb,yBAAKA,UAAU,QACb,kBAAC,GAAD,CAAMwG,KAAK,YAIjB,gEAEE,wBAAIxG,UAAU,mBACZ,4CACA,4CACA,kDACA,iDANJ,0CAUA,mDACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,QACb,kBAAC,GAAD,CAAMwG,KAAK,WAGf,yBAAKxG,UAAU,UACb,yBAAKA,UAAU,QACb,kBAAC,GAAD,CAAMwG,KAAK,WAGf,yBAAKxG,UAAU,UACb,yBAAKA,UAAU,QACb,kBAAC,GAAD,CAAMwG,KAAK,YAIjB,2BACE,wBAAIxG,UAAU,mBACZ,iDACA,iDACA,kDACA,6CAGJ,iDACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,QACb,kBAAC,GAAD,CAAMwG,KAAK,WAGf,yBAAKxG,UAAU,UACb,yBAAKA,UAAU,QACb,kBAAC,GAAD,CAAMwG,KAAK,WAGf,yBAAKxG,UAAU,UACb,yBAAKA,UAAU,QACb,kBAAC,GAAD,CAAMwG,KAAK,YAIjB,2BACE,wBAAIxG,UAAU,mBACZ,2CACA,iDACA,iDACA,oEALJ,6GAQsB,4CARtB,QAQgD,6CARhD,wBAUA,yIAEiB,oCAFjB,0FAKA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,QACb,kBAAC,GAAD,CAAMwG,KAAK,WAGf,yBAAKxG,UAAU,UACb,yBAAKA,UAAU,QACb,kBAAC,GAAD,CAAMwG,KAAK,WAGf,yBAAKxG,UAAU,UACb,yBAAKA,UAAU,QACb,kBAAC,GAAD,CAAMwG,KAAK,YAIjB,2BACE,wBAAIxG,UAAU,mBACZ,iDACA,iDACA,kDACA,iDALJ,6EChHSuT,OA7Cf,SAAehN,GACb,IAAM7I,EAAO+J,aAAY,SAACtJ,GAAD,OAAWA,EAAMT,QA4B1C,OA1BAoL,qBAAU,WACRvJ,SAEGiU,oBACApT,MAAK,SAASqC,GACb,GAAIA,EAAOmB,WAET,IAAID,EAAQlB,EAAOmB,WAAWC,YAIhC,IAAInG,EAAO+E,EAAO/E,KAClB2C,QAAQC,IAAIqD,EAAOjG,MAEpBoG,OAAM,SAASC,GAEEA,EAAMC,KACHD,EAAME,QAEbF,EAAMG,MAEDH,EAAMH,gBAG1B,IAEElG,EAUH,yBAAKsC,UAAU,aACb,kBAAC,EAAD,OATA,yBAAKA,UAAU,aACb,4BAAQC,QAASkE,EAAsBnE,UAAU,OAAjD,a,6jBC1BR,IAEMqE,GAAS,CACboP,YAAa,IACbzN,UACAqE,UAAW,EACX6F,SAAU,MAGNI,GAAkB,WACtB,IAAM5F,EAAc1I,IACpB,OAAO,MACFc,EAAU,CACXb,KAAMyI,EAAYzH,MAAM,IACxB3B,MAAOoJ,EAAYzH,MAAM,EAAG,MAHhC,CAKEX,SAAU,MAIRoR,GAAgB,SAACC,GAErB,IADA,IAAMhL,EAAU,GACP1H,EAAI,EAAGA,EAAI0S,EAAK1S,IACvB0H,EAAQ1H,GAAK,CACX+I,MAAO,EACPxF,MAAOH,GAAO2B,OAAO/E,IAGzB,OAAO0H,GAGH+H,GAAe,CACnBkD,WAAY,KACZjL,QAAS+K,GAAc,GACvB7C,aAAa,EACbpH,KAAM,IACNb,UAAU,EACVF,SAAU,KACVyD,aAAc,KACd7E,UAAU,EACVgK,WAAY,EACZR,gBAAiB,IACjBC,SAAU,IAoMG8C,G,YAhMb,WAAYtN,GAAQ,IAAD,8BACjB,4CAAMA,KAOR2K,gBAAkB,SAAC0C,GACjB,EAAKxI,SAAS,CACZwI,aACAjL,QAAS+K,GAAcE,KAEzB,EAAKxI,SAAS,CACZyF,aAAa,KAdE,EAkBnBe,kBAAoB,SAACnI,EAAMoI,GAAW,IAC5BlJ,EAAY,EAAKxK,MAAjBwK,QACFgD,EAAWhD,EAAQc,GAAMO,MAAQ6H,EAQvC,MAAO,CAPYvT,IAAOqK,EAAD,eACtBc,EAAO,CACNmC,OAAQ,CACN5B,MAAO2B,MAIOA,IA5BH,EA+BnBmG,cAAgB,WAAO,IAAD,EACW,EAAK3T,MAA5BuK,EADY,EACZA,SAAUpG,EADE,EACFA,SAClB,IAAKP,EAAMO,GAAW,CAAC,IAAD,EACC,EAAKsP,kBAAkBlJ,GAAW,IAAhD4C,EADa,oBAEpB,EAAKF,SAAS,CACZzC,QAAS2C,EACT5C,SAAU,KACVyD,aAAc,KACd7J,SAAU,OAvCG,EA4CnB4J,qBAAuB,SAACxD,GAAc,IAAD,EACJ,EAAKkJ,kBAAkBlJ,EAAU,GAD7B,mBAG7BrK,EAAW,CACfsK,QAJiC,KAKjCrB,SALiC,MAENjD,GAAOgG,WAAa3B,GAKjD,EAAK0C,SAAS/M,IAnDG,EAsDnBiU,eAAiB,SAAC5J,GAChB,IAAK,EAAKvK,MAAMuK,SAAU,CACxB,IACMpK,EAAS,CACboK,WACAyD,cAHc,IAAI2D,MAAOC,WAK3B,EAAK3E,SAAS9M,GAEd,EAAKiU,YAAc1G,YAAW,WAC5B,EAAKiG,kBACJzN,GAAOoP,eAjEK,EAqEnBjI,eAAiB,SAACY,EAAa1D,GAC7B,IAAMrK,EAAW,CACfuK,SAAU7G,EAAMqK,GAChB9J,SAAU8J,EACV1D,YAEErK,EAASuK,WACX4J,aAAa,EAAKD,aAClB1G,YAAW,WACT,EAAKJ,cACJ,MAEL,EAAKL,SAAS/M,IAjFG,EAoFnB6L,gBAAkB,SAAC7H,GAAU,IAAD,EACK,EAAKlE,MAA5ByK,EADkB,EAClBA,SAAUF,EADQ,EACRA,SAClB,IAAKE,GAAyB,OAAbF,EAAmB,CAClC,IAAM0D,EAAcxJ,EAAWP,EAAM,EAAKlE,MAAMmE,UAChD,EAAK8I,SAAS,CACZ9I,SAAU8J,IAERrK,EAAMqK,IACR,EAAKZ,eAAeY,EAAa1D,KA5FpB,EAiGnBqB,kBAAoB,SAAC+J,GAEF,OADI,EAAK3V,MAAlBuK,UAEN,EAAK4J,eAAewB,IApGL,EAwGnB3J,aAAe,WACb,IAAM9L,EAAWyE,EAAU,EAAK3E,OAChC,EAAKiN,SAAS/M,IA1GG,EA6GnBoN,UAAY,WAAO,IAAD,EACe,EAAKtN,MAA5BuK,EADQ,EACRA,SAAUpG,EADF,EACEA,SAClB,GAAIP,EAAMO,GAAW,CACnBjC,QAAQC,IAAI,uBACZ,IACMjC,EAAQ,MADI,EAAK6N,qBAAqBxD,GAC9B,CAEZE,UAAU,EACVF,SAAU,KACVyD,aAAc,MACXsG,EAAoB,EAAKtU,QAE9B,EAAKiN,SAAS/M,GAEhB2N,cAAc,EAAKmF,UACnBtF,YAAW,WACT,EAAKsF,SAAW9D,YAAY,EAAK+D,QAAS,EAAKjT,MAAM2S,mBACpDzM,GAAO6L,WA9HO,EAiInBwC,UAAY,WACV1G,cAAc,EAAKmF,UACnB,EAAK/F,SAAL,MACKuH,oBAAUjC,IADf,GAEKJ,QAnIL,EAAKnS,MAAL,MACKwU,oBAAUjC,IADf,GAEKJ,MAJY,E,sEAyIT,IAAD,SACoE5J,KAAKvI,MAAxEmD,EADD,EACCA,MAAOW,EADR,EACQA,KAAMK,EADd,EACcA,SAAUoG,EADxB,EACwBA,SAAUC,EADlC,EACkCA,QAASiL,EAD3C,EAC2CA,WAD3C,EACuDhL,SAC9D,OAAKgL,EA+BH,kBAAC,IAAMhF,SAAP,KACE,kBAAC,GAAD,CACEtN,MAAOA,EACPW,KAAMA,EACNK,SAAUA,EACVoG,SAAUA,EACVwB,gBAAiBxD,KAAKwD,gBACtBH,kBAAmBrD,KAAKqD,kBACxB6I,cAAelM,KAAKkM,cACpBjK,QAASA,EACTC,SAAUlC,KAAKvI,MAAMyK,SACrBtB,SAAUZ,KAAKvI,MAAMmJ,SACrBC,OAAQb,KAAKvI,MAAMsL,KACnBiJ,UAAWhM,KAAKgM,UAChBlL,MAAM,EACNqB,cAAc,KA5ChB,yBAAK7I,UAAU,aACb,wDACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,WACZ,YAAIU,MAAM,GAAGC,QAAQK,KAAI,SAACC,GACzB,OACE,yBAAKiG,IAAG,kBAAajG,GAAKjB,UAAU,wBAClC,yBACEC,QAAS,WACP,EAAKiR,gBAAgBjQ,EAAI,IAE3BjB,UAAU,aAETiB,EAAI,QAMf,6BACE,2BACE,kBAAC,IAAD,CAAMkH,GAAG,SAAT,gB,GAnKWf,a,6BCQZ2M,OA5Df,SAAexN,GACb,IAAMiE,EAAc/C,aAAY,SAACtJ,GAAD,OAAWA,EAAMT,QACzCA,EAAS8M,EAAT9M,KAFY,EAGM4K,mBAAS,MAHf,mBAGb0L,EAHa,KAGNC,EAHM,KAkBpB,OAdiBtU,cAEjBmJ,qBAAU,WACR,IAAMoL,EAAQ,yCAAG,uBAAAvS,EAAA,sDACfsQ,KAAM1E,IAAN,0BAA6B7P,EAAKyU,MAAO/R,MAAK,SAAC+T,GAC7CF,EAASE,EAAS1G,SAFL,2CAAH,qDAMTjD,EAAYvM,SAAoB,OAATP,GAC1BwW,MAED,CAAC1J,EAAYvM,UAEZuM,EAAYvM,QACP,cAGToC,QAAQC,IAAI0T,GAEC,OAATtW,EACK,sDAIP,yBAAKsC,UAAU,aACb,0CACA,2BAAOA,UAAU,WACf,+BACE,4BACE,0CACA,4CACA,oDAIJ,+BACGgU,GACCA,EAAMhT,KAAI,SAACoT,EAAKnT,GACd,OACE,wBAAIiG,IAAG,gBAAWjG,IAChB,4BAAKmT,EAAIhC,kBACT,4BAAKgC,EAAIC,cACT,4BAAK1K,KAAKqG,MAAaoE,EAAIE,UAAYF,EAAIC,aAA3B,YAM5B,2BACE,kBAAC,IAAD,CAAMlM,GAAG,KAAT,iBC3BOoM,G,iLApBX,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWrB,KACjC,kBAAC,IAAD,CAAOoB,KAAK,QAAQC,UAAWnK,KAC/B,kBAAC,IAAD,CAAOkK,KAAK,SAASC,UAAW3F,KAChC,kBAAC,IAAD,CAAO0F,KAAK,mBAAmBC,UAAWzG,KAC1C,kBAAC,IAAD,CAAOwG,KAAK,QAAQC,UAAWzD,KAC/B,kBAAC,IAAD,CAAOwD,KAAK,SAASC,UAAWb,KAChC,kBAAC,IAAD,CAAOY,KAAK,SAASC,UAAWpB,KAChC,kBAAC,IAAD,CAAOmB,KAAK,SAASC,UAAWnB,KAChC,kBAAC,IAAD,CAAOkB,KAAK,SAASC,UAAWX,Y,GAdvB3M,aCiDNuN,OApDf,SAAapO,GAAQ,IAAD,EACM+B,mBAAS,MADf,mBAEZ5I,GAFY,UAEDC,eA+CjB,OA7CAmJ,qBAAU,WACRvJ,IAASW,OAAO0U,oBAAmB,SAAClX,GAClC,GAAIA,EAAM,CACR,IAAMK,EAAWkK,OAAO4E,aAAa0E,QAAQ,aAAe7T,EAAKmX,YAAYpO,MAAM,KAAK,GAClFqO,EAAS,CACbD,YAAanX,EAAKmX,YAClB3Q,MAAOxG,EAAKwG,MACZ6Q,cAAerX,EAAKqX,cACpBC,SAAUtX,EAAKsX,SACfC,YAAavX,EAAKuX,YAClB9C,IAAKzU,EAAKyU,IACV+C,aAAcxX,EAAKwX,aACnBnX,YAEF2B,EAASjC,EAAW,CAAEQ,SAAS,EAAOP,KAAMoX,KAC5C7C,KACG1E,IADH,oBACoB7P,EAAKyU,MACtB/R,MAAK,SAACqC,GACLpC,QAAQC,IAAI,yBAEbwD,OAAM,SAACqR,GACFA,EAAIhB,UAAoC,MAAxBgB,EAAIhB,SAASiB,QAC/B/U,QAAQC,IAAI,uBACZ2R,KACGC,KAAK,YAAa,CACjBC,IAAKzU,EAAKyU,IACV3I,KAAMsL,IAEP1U,MAAK,WACJC,QAAQC,IAAI,mCAEbwD,OAAM,SAACqR,GACN9U,QAAQC,IAAI,yBAA0B6U,OAG1C9U,QAAQC,IAAI,qDAIlBD,QAAQC,IAAI,iBACZZ,EAASjC,EAAW,CAAEQ,SAAS,EAAOP,KAAM,aAG/C,IAEI,kBAAC,GAAD,OCpDT2X,IAASC,OACP,kBAAC,IAAD,CAAU9W,MAAOA,GACf,kBAAC,GAAD,OAEF+W,SAASC,eAAe,W","file":"static/js/main.0173fe7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sad_trombone.baad2ca9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/applause.c2030d5b.mp3\";","import { combineReducers, createStore, applyMiddleware } from 'redux'\nimport reduxThunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport update from 'immutability-helper'\n\nexport const UPDATE_USER = 'UPDATE_USER'\nexport const UPDATE_NICKNAME = 'UPDATE_NICKNAME'\n\nexport const updateUser = (user) => ({\n  type: UPDATE_USER,\n  payload: user,\n})\n\nexport const logOut = () => ({\n  type: 'LOGOUT',\n})\n\nexport const updateNickname = (nickname) => ({\n  type: UPDATE_NICKNAME,\n  payload: nickname,\n})\n\nexport const defaultUser = { loading: true, user: null }\n\nconst userReducer = (state = defaultUser, action) => {\n  switch (action.type) {\n    case UPDATE_USER:\n      return {\n        ...state,\n        ...action.payload,\n      }\n    case UPDATE_NICKNAME:\n      const newState = update(state, {\n        user: { nickname: { $set: action.payload } },\n      })\n      return newState\n    case 'LOGOUT':\n      return { loading: false, user: null }\n    default:\n      return state\n  }\n}\n\nconst reducers = {\n  user: userReducer,\n}\n\nconst store = createStore(\n  combineReducers(reducers),\n  composeWithDevTools(applyMiddleware(reduxThunk)),\n)\n\nexport default store\n","const firebaseConfig = {\n  apiKey: 'AIzaSyCLA_RFXrPvBdN_vrApCUlj28a82ownuzg',\n  authDomain: 'fire-set.firebaseapp.com',\n  databaseURL: 'https://fire-set.firebaseio.com',\n  projectId: 'fire-set',\n  storageBucket: 'fire-set.appspot.com',\n  messagingSenderId: '958559518798',\n  appId: '1:958559518798:web:ec451bbfb4ac03f30ec31f',\n  measurementId: 'G-FCHHM3FEZE',\n}\n\nexport default firebaseConfig\n","import * as firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport firebaseConfig from './firebaseConfig'\n\nfirebase.initializeApp(firebaseConfig)\n// firebase.analytics()\n\nconst firestore = firebase.firestore()\n\nexport default firestore\n","import React, { useState, useEffect } from 'react'\nimport Routes from './Routes'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useHistory,\n  useLocation,\n} from 'react-router-dom'\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\nimport { logOut } from '../redux-helpers'\nimport { useDispatch } from 'react-redux'\n\nfunction Signout() {\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const signOut = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch(logOut())\n        console.log('Signed out.')\n        history.push('/')\n      })\n  }\n\n  return (\n    <div style={{ marginBottom: '16px' }}>\n      <p className=\"right-align\">\n        <a onClick={signOut}>Sign Out</a>\n      </p>\n    </div>\n  )\n}\n\nexport default Signout\n","// @flow\nimport { shuffle } from 'lodash'\nimport * as firebase from 'firebase/app'\nimport 'firebase/auth'\n\nexport const range = (n: number) => {\n  return [...Array(n).keys()]\n}\n\nconst displaySet = (tuple: Array<number>, rowSize: number = 3) => {\n  let matrix\n  if (rowSize === 4) {\n    matrix = range(3).map((i) => {\n      const row = range(4).map((j) => {\n        if (tuple.includes(4 * i + j)) {\n          return 'x'\n        }\n        return 'o'\n      })\n      return row.join('')\n    })\n  } else {\n    matrix = range(4).map((i) => {\n      const row = range(3).map((j) => {\n        if (tuple.includes(3 * i + j)) {\n          return 'x'\n        }\n        return 'o'\n      })\n      return row.join('')\n    })\n  }\n  console.log(matrix.join('\\n'))\n}\n\nexport const serializeGame = (state: {\n  board: Array<string>,\n  deck: Array<string>,\n  selected: Array<string>,\n}) => {\n  const status = JSON.stringify({\n    board: state.board,\n    deck: state.deck,\n    selected: state.selected,\n  })\n  return status\n}\n\nexport const countSets = (board, { debug = false, returnWhenFound = false } = {}) => {\n  let count = 0\n  let candidate = []\n  for (let a = 0; a < board.length - 2; a++) {\n    for (let b = a + 1; b < board.length - 1; b++) {\n      for (let c = b + 1; c < board.length; c++) {\n        candidate = [board[a], board[b], board[c]]\n        if (isSet(candidate)) {\n          if (debug) {\n            displaySet([a, b, c])\n          }\n          count++\n          if (returnWhenFound) {\n            return count\n          }\n        }\n      }\n    }\n  }\n  return count\n}\n\nexport const makeDeck = (): Array<string> => {\n  let deck = []\n  range(3).forEach((c) => {\n    range(3).forEach((n) => {\n      range(3).forEach((s) => {\n        range(3).forEach((f) => {\n          const card = '' + c + s + n + f\n          deck.push(card)\n        })\n      })\n    })\n  })\n  return deck\n}\n\nexport const isSet = (selected: Array<string>) => {\n  if (selected.length !== 3) {\n    return false\n  }\n  const [a, b, c] = selected\n  for (let i = 0; i < 4; i++) {\n    const sum = Number(a[i]) + Number(b[i]) + Number(c[i])\n    if (sum % 3 !== 0) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const nameThird = (a: string, b: string) => {\n  let features\n  let missing\n  let result = ''\n  for (let i = 0; i < 4; i++) {\n    if (a[i] === b[i]) {\n      result = result + a[i]\n    } else {\n      features = Number(a[i]) + Number(b[i])\n      missing = (3 - features).toString()\n      result = result + missing\n    }\n  }\n  return result.trim()\n}\n\nexport const cardToggle = (card: string, selected: Array<string>): Array<string> => {\n  if (selected.includes(card)) {\n    return selected.filter((c) => c !== card)\n  } else {\n    return [...selected, card]\n  }\n}\n\nexport const reshuffle = ({\n  board,\n  deck,\n}: {\n  board: Array<string>,\n  deck: Array<string>,\n}): { board: Array<string>, deck: Array<string> } => {\n  let newDeck = shuffle([...board, ...deck])\n  while (\n    countSets(newDeck.slice(0, 12), { returnWhenFound: true }) === 0 &&\n    countSets(newDeck, { returnWhenFound: true }) > 0\n  ) {\n    newDeck = shuffle(newDeck)\n  }\n  return {\n    deck: newDeck.slice(12),\n    board: newDeck.slice(0, 12),\n  }\n}\n\nexport const noSetsRemain = (board, deck) => {\n  return countSets([...board, ...deck], { returnWhenFound: true })\n}\n\nexport const removeSelected = (state: {\n  board: Array<string>,\n  deck: Array<string>,\n  selected: Array<string>,\n}): {\n  board: Array<string>,\n  deck: Array<string>,\n  selected: Array<string>,\n} => {\n  const { board, deck, selected } = state\n  const newCards = deck.slice(0, 3)\n  let newBoard = [...board]\n  let newDeck = deck.slice(3)\n  selected.forEach((c, i) => {\n    let index = newBoard.indexOf(c)\n    newBoard[index] = newCards[i]\n  })\n  while (countSets(newBoard) === 0) {\n    ;({ deck: newDeck, board: newBoard } = reshuffle({\n      board: newBoard,\n      deck: newDeck,\n    }))\n  }\n\n  return {\n    deck: newDeck,\n    board: newBoard,\n    selected: [],\n  }\n}\n\nexport const handleGoogleSignIn = () => {\n  const provider = new firebase.auth.GoogleAuthProvider()\n  firebase\n    .auth()\n    .signInWithPopup(provider)\n    .then(function(result) {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      var token = result.credential.accessToken\n      // The signed-in user info.\n      var user = result.user\n      console.log(token, user)\n    })\n    .catch(function(error) {\n      // Handle Errors here.\n      var errorCode = error.code\n      var errorMessage = error.message\n      // The email of the user's account used.\n      var email = error.email\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential\n      // ...\n    })\n}\n\nexport const handleGoogleRedirect = () => {\n  const provider = new firebase.auth.GoogleAuthProvider()\n  firebase\n    .auth()\n    .signInWithRedirect(provider)\n    .then(function(result) {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      var token = result.credential.accessToken\n      // The signed-in user info.\n      var user = result.user\n      console.log(token, user)\n    })\n    .catch(function(error) {\n      // Handle Errors here.\n      var errorCode = error.code\n      var errorMessage = error.message\n      // The email of the user's account used.\n      var email = error.email\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential\n      // ...\n    })\n}\n","import React, { Component, Fragment } from 'react'\nimport { range } from '../utils/helpers'\nimport './card.css'\n\nconst config = {\n  width: 120,\n  height: 200,\n  strokeWidth: 4,\n  padding: 25,\n}\n\nconst Rectangle = ({ fill, color }) => {\n  let { padding, height, width, strokeWidth } = config\n  return (\n    <g>\n      {/* triangle */}\n      {/* <polygon\n    points={`${padding},${height - padding}\n    ${width / 2},${padding}\n    ${width - padding},${height - padding}`}\n    style={{ fill: fill, stroke: color, strokeWidth: config.strokeWidth }}\n  /> */}\n      {/* rectangle */}\n      <polygon\n        points={`${padding},${padding}\n    ${width - padding},${padding}\n    ${width - padding},${height - padding}\n    ${padding},${height - padding}`}\n        style={{ fill: fill, stroke: color, strokeWidth: strokeWidth }}\n      />\n    </g>\n  )\n}\n\nconst Squiggle = ({ fill, color }) => {\n  let { padding, height, width, strokeWidth } = config\n  return (\n    <svg width=\"120\" height=\"200\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g>\n        <rect fill=\"#fff\" id=\"canvas_background\" height=\"202\" width=\"122\" y=\"-1\" x=\"-1\" />\n        <g display=\"none\" overflow=\"visible\" y=\"0\" x=\"0\" height=\"100%\" width=\"100%\" id=\"canvasGrid\">\n          <rect \n          fill=\"#fff\"\n          strokeWidth=\"0\" \n          y=\"0\" x=\"0\" height=\"100%\" width=\"100%\" />\n        </g>\n      </g>\n      <g>\n        <path\n          stroke={color}\n          transform=\"\n          rotate(270,58.8,98)\n          scale(0.8 1)\n          translate(10 0)\n          \"\n          id=\"svg_5\"\n          d=\"\n          m-17.49,66\n          c50.83,-35.45 101.7,35.45\n          152.5,0\n          c30,-10 30,43.8\n          0,63.8\n          c-50.8,35.45 -101.6,-35.45\n          -152.5,0\n          c-30,15 -30,-45\n          0,-63.59\n          z\n          \"\n        fillOpacity=\"null\"\n          strokeOpacity=\"null\"\n          strokeWidth={strokeWidth}\n          fill={fill}\n        />\n      </g>\n    </svg>\n  )\n}\n\nconst Shape = ({ shape, fill, color }) => {\n  let { padding, height, width, strokeWidth } = config\n  if (shape === '0') {\n    padding = padding + 1\n    return <Squiggle fill={fill} color={color} />\n  }\n  if (shape === '1') {\n    return (\n      <g>\n        <ellipse\n          stroke={color}\n          ry={(height - 2 * padding) / 2}\n          rx={(width - 2 * padding) / 2}\n          cy={height / 2}\n          cx={width / 2}\n          fillOpacity=\"null\"\n          strokeOpacity=\"null\"\n          strokeWidth={config.strokeWidth}\n          fill={fill}\n        />\n      </g>\n    )\n  }\n  if (shape === '2') {\n    return (\n      <g>\n        {/* diamond */}\n\n        <polygon\n          points={`${padding},${height / 2}\n          ${width / 2},${padding}\n          ${width - padding},${height / 2}\n          ${width / 2},${height - padding}`}\n          style={{ fill: fill, stroke: color, strokeWidth: config.strokeWidth }}\n        />\n      </g>\n    )\n  }\n}\n\nclass Card extends Component {\n  colors = {\n    0: '#00A91D',\n    1: '#3E009E',\n    2: '#FF0000',\n    white: '#fff',\n  }\n\n  getFill = (color, fill) => {\n    if (fill === '1') {\n      return `url(#card-${color}-${fill})`\n    }\n    if (fill === '2') {\n      return this.colors[color]\n    }\n    return this.colors.white\n  }\n\n  drawShape = () => {\n    const [, color, shape, fill] = this.props.desc.split('')\n    return (\n      <Fragment>\n        <g>\n          <title>background</title>\n          <rect fill={this.colors.white} id=\"canvas_background\" y=\"-1\" x=\"-1\" />\n          <g\n            display=\"none\"\n            overflow=\"visible\"\n            y=\"0\"\n            x=\"0\"\n            height=\"100%\"\n            width=\"100%\"\n            id=\"canvasGrid\"\n          >\n            <rect strokeWidth=\"0\" y=\"0\" x=\"0\" height=\"100%\" width=\"100%\" />\n          </g>\n        </g>\n        <Shape shape={shape} fill={this.getFill(color, fill)} color={this.colors[color]} />\n      </Fragment>\n    )\n  }\n\n  render() {\n    const [number, color, , fill] = this.props.desc.split('')\n    return (\n      <div className=\"game-card\">\n        <svg width=\"0\" height=\"0\">\n          <pattern\n            id={`card-${color}-${fill}`}\n            width={120 / 12}\n            height=\"10\"\n            patternTransform=\"rotate(45 0 0)\"\n            patternUnits=\"userSpaceOnUse\"\n          >\n            <line\n              x1=\"0\"\n              y1=\"0\"\n              x2=\"0\"\n              y2=\"10\"\n              style={{ stroke: this.colors[color], strokeWidth: '5' }}\n            />\n          </pattern>\n        </svg>\n\n        {range(Number(number) + 1).map(i => {\n          return (\n            <svg\n              key={i}\n              className=\"shape\"\n              viewBox={`0 0 ${config.width} ${config.height}`}\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              {this.drawShape()}\n            </svg>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nexport default Card\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport sadTrombone from '../assets/sad_trombone.mp3'\nimport applause from '../assets/applause.mp3'\nimport { useSelector, useDispatch } from 'react-redux'\n\nfunction GameOver(props) {\n  const { gameOver, myName, solo } = props\n  const finalSound = () => {\n    const soundEffect = gameOver === myName ? applause : sadTrombone\n    return <audio src={soundEffect} autoPlay />\n  }\n  const userReducer = useSelector((state) => state.user)\n  const { user } = userReducer\n\n  return (\n    <div className=\"deep-purple lighten-2\" style={{ height: '100vh' }}>\n      {finalSound()}\n      <div className=\"row center-align\">\n        <div\n          className=\"card col s8 offset-s2 m6 offset-m3\"\n          style={{ marginTop: window.innerHeight * 0.2 }}\n        >\n          <div className=\"card-content\">\n            <span className=\"card-title\">GAME OVER!</span>\n            <p>Winner: {gameOver} </p>\n          </div>\n          <div className=\"card-action\">\n            <p>\n              <Link to=\"/\" style={{marginRight: '48px'}}>\n                Main Menu\n              </Link>\n              {solo && user !== null && (\n                <span className=\"right-align\">\n                  <Link to=\"/stats\">\n                    View Stats\n                  </Link>\n                </span>\n              )}\n            </p>\n          </div>\n        </div>\n      </div>\n      {/* {solo && (\n        <div className=\"row\">\n          <button className=\"btn\" onClick={props.resetGame}>\n            Play Again\n          </button>\n        </div>\n      )} */}\n    </div>\n  )\n}\n\nexport default GameOver\n","import React, { useEffect, useState, Component, Fragment } from 'react'\nimport { isEmpty, map, debounce } from 'lodash'\nimport { countSets } from '../utils/helpers'\nimport Card from './Card'\nimport GameOver from './GameOver'\n\nfunction Board(props) {\n  const [sets, setSets] = useState(null)\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight)\n  const {\n    board,\n    selected,\n    deck,\n    declarer,\n    players,\n    gameOver,\n    myName,\n    setFound,\n    sharedDevice,\n    solo,\n  } = props\n\n  useEffect(() => {\n    const resize = debounce(() => {\n      setWindowHeight(window.innerHeight)\n    }, 150)\n\n    window.addEventListener('resize', resize)\n\n    return function cleanup() {\n      window.removeEventListener('resize', resize)\n    }\n  }, [])\n\n  useEffect(() => {\n    setSets(countSets(board, { debug: process.env.NODE_ENV !== 'production' }))\n  }, [board])\n\n  if (isEmpty(players) || !Object.keys(players).includes(myName)) {\n    return null\n  }\n\n  const borderColor = declarer ? players[declarer].color : players[myName].color\n\n  if (gameOver) {\n    return <GameOver gameOver={gameOver} myName={myName} solo={solo} />\n  }\n\n  const playersArray = map(players, (info, name) => {\n    return {\n      name,\n      ...info,\n    }\n  })\n\n  const topBoxes = Math.ceil(playersArray.length / 2)\n  const topPlayers = playersArray.slice(0, topBoxes)\n  const bottomPlayers = playersArray.slice(topBoxes)\n\n  return (\n    <Fragment>\n      {!sharedDevice ? (\n        <div className=\"navbar-fixed\">\n          <nav>\n            <div className=\"nav-wrapper\">\n              {declarer ? <>SET! {declarer}</> : <>Sets: {sets}</>}\n              <ul className=\"right hide-on-med-and-down\">\n                <li>Cards Left: {deck.length}</li>\n              </ul>\n            </div>\n          </nav>\n        </div>\n      ) : (\n        <Fragment>\n          <div className=\"player-buttons-container\">\n            {topPlayers.map((info) => {\n              return (\n                <div\n                  className={`shared-player player-name ${info.color} ${\n                    info.name == declarer ? 'active-player' : ''\n                  }`}\n                  onClick={() => {\n                    props.handlePlayerClick(info.name)\n                  }}\n                  key={info.name}\n                >\n                  <p className=\"center-align\">{info.name == declarer ? 'SET!' : info.score}</p>\n                </div>\n              )\n            })}\n            <div className=\"player-buttons-container bottom\">\n              {bottomPlayers.map((info) => {\n                return (\n                  <div\n                    className={`shared-player player-name ${info.color} ${\n                      info.name == declarer ? 'active-player' : ''\n                    }`}\n                    onClick={() => {\n                      props.handlePlayerClick(info.name)\n                    }}\n                    key={info.name}\n                  >\n                    <p className=\"center-align\">{info.name == declarer ? 'SET!' : info.score}</p>\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n        </Fragment>\n      )}\n\n      <div className=\"container\" style={{ maxWidth: 0.95 * window.innerHeight }}>\n        <div className=\"row\">\n          {board.map((card) => {\n            return (\n              <div\n                key={card}\n                className={`col s4 ${selected.includes(card) ? borderColor : ''}`}\n                onClick={() => {\n                  props.handleCardClick(card)\n                }}\n              >\n                <div\n                  className={`card ${\n                    setFound && selected.length === 3 && !selected.includes(card) ? 'blurry' : ''\n                  }`}\n                >\n                  <Card desc={card} />\n                </div>\n              </div>\n            )\n          })}\n        </div>\n        <div className=\"row\">\n          {map(players, (info, name) => {\n            if (!sharedDevice) {\n              return (\n                <div key={name} className=\"col s4 m3\">\n                  <span className={`player-name ${info.color}`}>\n                    {name}: {info.score}\n                  </span>\n                </div>\n              )\n            }\n          })}\n        </div>\n        <div className=\"row\">\n          {props.handleRedeal && (\n            <button onClick={props.handleRedeal} className=\"btn\">\n              Shuffle\n            </button>\n          )}\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Board\n","export const colors = [\n  ' light-blue lighten-3',\n  ' pink lighten-3',\n  ' amber accent-2',\n  ' purple darken-1',\n  ' light-green lighten-1',\n  ' orange accent-2',\n];","import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { updateNickname } from '../redux-helpers'\nimport { Link } from 'react-router-dom'\nimport update from 'immutability-helper'\nimport firebase from 'firebase/app'\n\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport firestore from '../firestore'\n\nimport Signout from './Signout'\nimport Board from './Board'\nimport {\n  handleGoogleSignIn,\n  handleGoogleRedirect,\n  makeDeck,\n  cardToggle,\n  reshuffle,\n  removeSelected,\n  isSet,\n} from '../utils/helpers'\nimport { colors } from '../config'\n\nconst config = {\n  turnTime: 5000,\n  colors,\n  playingTo: 6,\n}\n\nconst firebaseRefs = {}\n\nfunction Host(props) {\n  const userReducer = useSelector((state) => state.user)\n  const { user, loading: userLoading } = userReducer\n  const dispatch = useDispatch()\n\n  const initialDeck = makeDeck()\n  const initialGameState = {\n    ...reshuffle({\n      deck: initialDeck.slice(12),\n      board: initialDeck.slice(0, 12),\n    }),\n    selected: [],\n  }\n  const [state, setFullState] = useState({\n    players: {},\n    gameTitle: '',\n    created: false,\n    myName: '',\n    inputName: '',\n    setFound: false,\n    autoplay: false,\n    declarer: null,\n    gameOver: false,\n    ...initialGameState,\n  })\n\n  const currentState = useRef(state)\n  currentState.current = state\n\n  const setState = (update) => {\n    setFullState({\n      ...currentState.current,\n      ...update,\n    })\n  }\n\n  const handleCardClick = (card) => {\n    const { myName } = state\n    if (!state.declarer) {\n      const newSelected = cardToggle(card, state.selected)\n      if (isSet(newSelected)) {\n        updateSelected(newSelected, myName)\n      }\n      setState({\n        selected: newSelected,\n      })\n    }\n  }\n\n  const handleRedeal = () => {\n    const newState = reshuffle(state)\n    setAndSendState(newState)\n  }\n\n  const handleCreateGame = (e) => {\n    e.preventDefault()\n    const { myName, board, deck, selected } = state\n    let gameTitle = state.gameTitle\n    if (gameTitle === '') {\n      gameTitle = `${myName}'s game`\n    }\n    firebaseRefs.game = firestore.collection('games').doc(gameTitle)\n    firebaseRefs.game.set({\n      board,\n      deck,\n      selected,\n      lastUpdate: firebase.firestore.FieldValue.serverTimestamp(),\n    })\n    window.activeGameUpdater = window.setInterval(() => {\n      firebaseRefs.game.update({\n        lastUpdate: firebase.firestore.FieldValue.serverTimestamp(),\n      })\n    }, 30000)\n    firebaseRefs.actions = firebaseRefs.game.collection('actions')\n    firebaseRefs.actions.get().then((snapshot) => {\n      snapshot.forEach((doc) => {\n        console.log(doc.id, '=>', doc.data())\n      })\n    })\n\n    firebaseRefs.actions.onSnapshot((snapshot) => {\n      snapshot.docChanges().forEach((change) => {\n        if (change.type === 'added') {\n          const action = change.doc.data()\n          console.log(action)\n          processAction(action)\n          firebaseRefs.actions.doc(change.doc.id).delete()\n        }\n        if (change.type === 'removed') {\n          console.log('Removed action: ', change.doc.data())\n        }\n      })\n    })\n\n    setState({\n      created: true,\n    })\n  }\n\n  const handleSetName = (e) => {\n    e.preventDefault()\n    setState({\n      myName: user.nickname,\n      players: {\n        [user.nickname]: {\n          score: 0,\n          color: config.colors[0],\n        },\n      },\n    })\n  }\n\n  const markPointForDeclarer = (declarer) => {\n    if (!declarer) {\n      return {}\n    }\n    const { players } = currentState.current\n    const newScore = players[declarer].score + 1\n    const newPlayers = update(players, {\n      [declarer]: {\n        $merge: {\n          score: newScore,\n        },\n      },\n    })\n    const gameOver = newScore >= config.playingTo && declarer\n    if (gameOver) {\n      window.setTimeout(() => {\n        firebaseRefs.game.delete()\n        clearInterval(window.activeGameUpdater)\n      }, 3000)\n    }\n\n    return {\n      players: newPlayers,\n      gameOver,\n    }\n  }\n\n  const processAction = (action) => {\n    const { type, payload } = action\n    const { players, declarer } = currentState.current\n    switch (type) {\n      case 'join':\n        if (Object.keys(players).includes(payload.name)) {\n          return\n        }\n        const newPlayers = {\n          ...players,\n          [payload.name]: {\n            score: 0,\n            color: config.colors[Object.keys(players).length],\n          },\n        }\n        setAndSendState({ players: newPlayers })\n        break\n      case 'found':\n        if (!declarer) {\n          updateSelected(payload.selected, payload.name)\n        }\n        break\n      default:\n        return\n    }\n  }\n\n  const removeSet = (selected, declarer) => {\n    if (isSet(selected)) {\n      const newScores = markPointForDeclarer(declarer)\n      const newState = {\n        ...currentState.current,\n        setFound: false,\n        declarer: null,\n        timeDeclared: null,\n        ...newScores,\n        ...removeSelected(currentState.current),\n      }\n      setAndSendState(newState)\n    }\n  }\n\n  const setAndSendState = (update) => {\n    setState(update)\n    firebaseRefs.game.update(update)\n  }\n\n  const updateSelected = (newSelected, declarer) => {\n    const newState = {\n      setFound: isSet(newSelected),\n      selected: newSelected,\n      declarer,\n    }\n    setAndSendState(newState)\n    if (newState.setFound) {\n      setTimeout(() => {\n        removeSet(newSelected, declarer)\n      }, 4000)\n    }\n  }\n\n  const { board, deck, selected, declarer, players, gameTitle, created, myName } = state\n\n  if (userLoading) {\n    return 'Loading...'\n  }\n\n  if (!user) {\n    return (\n      <div className=\"container\">\n        <p>To host a game, sign in with your Google account.</p>\n        <p>\n          <button onClick={handleGoogleRedirect} className=\"btn\">\n            Sign in\n          </button>\n        </p>\n      </div>\n    )\n  }\n\n  if (myName === '') {\n    return (\n      <div className=\"container\">\n        <Signout />\n        <h4>Enter your nickname:</h4>\n        <form onSubmit={handleSetName}>\n          <input\n            autoFocus\n            placeholder=\"hostname\"\n            value={user.nickname}\n            onChange={(e) => {\n              dispatch(updateNickname(e.target.value))\n              window.localStorage.setItem('nickname', e.target.value)\n            }}\n          />\n          <button type=\"submit\" className=\"btn\">\n            Submit\n          </button>\n        </form>\n        <div>\n          <p>\n            <Link to=\"/\">Main Menu</Link>\n          </p>\n        </div>\n      </div>\n    )\n  }\n\n  if (!created) {\n    return (\n      <div className=\"container\">\n        <h4>Name your game:</h4>\n        <form onSubmit={handleCreateGame}>\n          <input\n            placeholder={`${myName}'s game`}\n            onChange={(e) => {\n              setState({ gameTitle: e.target.value })\n            }}\n            value={gameTitle}\n          />\n          <button type=\"submit\" className=\"btn\">\n            Create\n          </button>\n        </form>\n      </div>\n    )\n  }\n\n  return (\n    <Board\n      board={board}\n      deck={deck}\n      selected={selected}\n      declarer={declarer}\n      handleCardClick={handleCardClick}\n      // handleDeclare={this.handleDeclare}\n      handleRedeal={handleRedeal}\n      players={players}\n      setFound={state.setFound}\n      gameOver={state.gameOver}\n      myName={state.myName}\n    />\n  )\n}\n\nexport default Host\n","import React from 'react'\n\nconst Modal = ({ children, visible: popupVisible }) => {\n  return (\n    <div className=\"modal popup-message\" style={{ display: popupVisible ? 'block' : 'none' }}>\n      <div className=\"modal-content\">{children}</div>\n    </div>\n  )\n}\n\nexport default Modal\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { isEmpty } from 'lodash'\nimport { Link } from 'react-router-dom'\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\n\nimport { updateNickname } from '../redux-helpers'\nimport { cardToggle, isSet, handleGoogleSignIn } from '../utils/helpers'\nimport firestore from '../firestore'\nimport Modal from './Modal'\nimport Signout from './Signout'\nimport Board from './Board'\n\nfunction Guest(props) {\n  const userReducer = useSelector((state) => state.user)\n  const { user } = userReducer\n  const dispatch = useDispatch()\n\n  const [state, setFullState] = useState({\n    popupVisible: false,\n    setFound: false,\n    displayAnimation: false,\n    animatedSet: [],\n    declarer: '',\n    deck: [],\n    board: [],\n    selected: [],\n  })\n  const [myName, setMyName] = useState('')\n  const [firebaseRefs, setFirebaseRefs] = useState({})\n\n  const setState = (update) => {\n    setFullState({\n      ...state,\n      ...update,\n    })\n  }\n\n  const handleCardClick = (card) => {\n    const { declarer } = state\n    if (declarer) {\n      return\n    }\n    const newSelected = cardToggle(card, state.selected)\n    const newState = {}\n    if (newSelected.length === 3) {\n      if (isSet(newSelected)) {\n        const action = {\n          type: 'found',\n          payload: { selected: newSelected, name: myName },\n        }\n        sendAction(action)\n        newState.popupVisible = true\n      } else {\n        console.log('Bad set selected!')\n        window.setTimeout(this.resetLocalSelected, 1000)\n      }\n    }\n\n    setState({\n      ...newState,\n      selected: newSelected,\n    })\n  }\n\n  const handleSetName = (e) => {\n    e.preventDefault()\n    const nameInput = user.nickname\n    if (isEmpty(nameInput)) {\n      return\n    }\n    setMyName(nameInput)\n    sendAction({\n      type: 'join',\n      payload: { name: nameInput },\n    })\n  }\n\n  const processUpdate = (doc) => {\n    const updatedState = { ...doc.data() }\n    if (isEmpty(updatedState)) {\n      return\n    }\n    console.log('Updating', updatedState)\n    setState({\n      ...updatedState,\n      popupVisible: false,\n    })\n  }\n\n  const sendAction = (action) => {\n    firebaseRefs.actions.add({\n      ...action,\n      created: firebase.firestore.FieldValue.serverTimestamp(),\n    })\n  }\n\n  const togglePopup = () => {\n    setState((state) => ({\n      popupVisible: !state.popupVisible,\n    }))\n  }\n\n  useEffect(() => {\n    setState({\n      popupVisible: false,\n    })\n  }, [state.declarer])\n\n  useEffect(() => {\n    const { gameName } = props.match.params\n    firebaseRefs.game = firestore.collection('games').doc(gameName)\n    firebaseRefs.game.onSnapshot((doc) => {\n      processUpdate(doc)\n    })\n    firebaseRefs.actions = firebaseRefs.game.collection('actions')\n\n    // return function cleanup() {\n    //   if (firebaseRefs.game) {\n    //     firebaseRefs.game()\n    //   }\n    // }\n  }, [])\n\n  const { board, deck, selected, declarer, players, popupVisible } = state\n  if (userReducer.loading) {\n    return 'Loading...'\n  }\n  if (!user) {\n    return (\n      <div className=\"container\">\n        <p>To join a game, sign in with your Google account.</p>\n        <p>\n          <button onClick={handleGoogleSignIn} className=\"btn\">\n            Sign in\n          </button>\n        </p>\n        <p>\n          <Link to=\"/lobby\">Back</Link>\n        </p>\n      </div>\n    )\n  }\n  if (!myName) {\n    return (\n      <div className=\"container\">\n        <Signout />\n\n        <h4>Choose nickname</h4>\n        <form onSubmit={handleSetName}>\n          <input\n            autoFocus\n            type=\"text\"\n            placeholder=\"your name\"\n            value={user.nickname}\n            onChange={(e) => {\n              dispatch(updateNickname(e.target.value))\n              window.localStorage.setItem('nickname', e.target.value)\n            }}\n          />\n          <input className=\"btn\" type=\"submit\" value=\"Join\" />\n        </form>\n      </div>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      <Modal visible={popupVisible}>\n        <p className=\"flow-text center-align\">SET!</p>\n        <div className=\"progress\">\n          <div className=\"indeterminate\" style={{ width: '30%' }} />\n        </div>\n      </Modal>\n      <Board\n        board={board}\n        deck={deck}\n        selected={selected}\n        declarer={declarer}\n        handleCardClick={handleCardClick}\n        // handleDeclare={this.handleDeclare}\n        players={players}\n        setFound={state.setFound}\n        gameOver={state.gameOver}\n        // syncing={this.state.syncing}\n        myName={myName}\n      />\n    </React.Fragment>\n  )\n}\n\nexport default Guest\n","import React, { Component, Fragment } from 'react'\nimport firestore from '../firestore'\nimport { Link } from 'react-router-dom'\n\nconst styles = {}\n\nclass Lobby extends Component {\n  constructor(props) {\n    super(props)\n    const games = []\n\n    this.state = {\n      name: '',\n      newGame: 'baz',\n      init: false,\n      games,\n    }\n  }\n\n  componentDidMount() {\n    this.gamesRef = firestore.collection('games')\n\n    this.unsubscribe = this.gamesRef.onSnapshot(snapshot => {\n      const newGames = []\n      snapshot.forEach(doc => {\n        newGames.push({\n          name: doc.id,\n          ...doc.data(),\n        })\n      })\n      this.setState({\n        init: true,\n        games: newGames,\n      })\n    })\n  }\n\n  componentWillUnmount = () => {\n    this.unsubscribe()\n  }\n\n  addGame = e => {\n    e.preventDefault()\n    const { newGame } = this.state\n    this.gamesRef.doc(newGame).set({\n      host: 'bill',\n    })\n  }\n\n  render() {\n    const { games, init } = this.state\n    if (!init) {\n      return null\n    }\n    const activeGames = games.filter(g => {\n      const { lastUpdate } = g\n      if (!lastUpdate) {\n        return false\n      }\n      const updated = lastUpdate.toMillis()\n      const now = new Date().getTime()\n      const age = Math.round((now - updated) / 1000)\n      return age < 40\n    })\n    return (\n      <div className=\"container\" style={{ height: '100vh' }}>\n        {activeGames.length === 0 ? (\n          <Fragment>\n            <div className=\"row\">\n              <div className=\"col s8 offset-s2 m6 offset-m3\">\n                <div className=\"card-panel teal\" style={{ marginTop: window.innerHeight * 0.2 }}>\n                  <span className=\"white-text\">There are currently no active games.</span>\n                </div>\n                <Link to=\"/\">Back</Link>\n              </div>\n            </div>\n          </Fragment>\n        ) : (\n          <Fragment>\n            <h4 className=\"center-align\">Available games</h4>\n            <div className=\"row center-align\">\n              {activeGames.map((game, i) => {\n                return (\n                  <div className=\"col s6 m4\" key={game.name}>\n                    <Link to={`/guest/${game.name}`}>\n                      <div className=\"card-panel\">{game.name}</div>\n                    </Link>\n                  </div>\n                )\n              })}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Lobby\n","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport Board from './Board'\nimport {\n  makeDeck,\n  cardToggle,\n  reshuffle,\n  removeSelected as removeSelectedCards,\n  isSet,\n  nameThird,\n  handleGoogleRedirect,\n} from '../utils/helpers'\nimport { shuffle, cloneDeep } from 'lodash'\nimport { colors } from '../config'\nimport update from 'immutability-helper'\nimport Slider from 'react-rangeslider'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport Signout from './Signout'\n\nconst debugging = false\n\nconst config = {\n  turnTime: 4000,\n  colors,\n  playingTo: 6,\n  cpuDelay: 1200,\n}\n\nconst calculateIntervalFromDifficulty = (d) => {\n  let diff = Number(d)\n  if (Number.isNaN(diff)) {\n    diff = 1\n  }\n  const interval = 24000 / (5 * diff)\n  return interval\n}\n\nconst createGameState = () => {\n  const initialDeck = makeDeck()\n  return {\n    ...reshuffle({\n      deck: initialDeck.slice(12),\n      board: initialDeck.slice(0, 12),\n    }),\n    selected: [],\n  }\n}\n\nconst logTime = (msg = '') => {\n  const d = new Date()\n  const s = (d.getTime() % 10 ** 6) / 1000\n  console.log(msg, s.toFixed(1))\n}\n\nconst initialState = {\n  players: {\n    you: {\n      score: 0,\n      color: config.colors[0],\n    },\n    cpu: {\n      score: 0,\n      color: config.colors[1],\n    },\n  },\n  gameStarted: false,\n  name: 'you',\n  setFound: false,\n  declarer: null,\n  timeDeclared: null,\n  gameOver: false,\n  cpuTurnInterval: 1000,\n  cpuFound: [],\n  startTime: null,\n}\n\nclass Solo extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      ...cloneDeep(initialState),\n      ...createGameState(),\n    }\n  }\n\n  handleStartGame = (e) => {\n    e.preventDefault()\n    this.setState({\n      gameStarted: true,\n      startTime: new Date(),\n    })\n\n    console.log(`Turns every ${this.state.cpuTurnInterval} ms`)\n    setTimeout(() => {\n      this.cpuTimer = setInterval(this.cpuTurn, this.state.cpuTurnInterval)\n    }, config.cpuDelay)\n  }\n\n  componentDidMount = () => {\n    const difficulty = window.localStorage.getItem('soloDifficulty') || '2'\n    const cpuTurnInterval = calculateIntervalFromDifficulty(difficulty)\n    this.setState({\n      difficulty,\n      cpuTurnInterval,\n    })\n  }\n\n  componentWillUnmount = () => {\n    clearInterval(this.cpuTimer)\n  }\n\n  cpuTurn = () => {\n    const { board, declarer, gameOver } = this.state\n    if (declarer || gameOver) {\n      return\n    }\n    if (debugging) {\n      logTime('Guess')\n    }\n    const [a, b] = shuffle(board).slice(0, 2)\n    const c = nameThird(a, b)\n    if (board.includes(c)) {\n      this.setState({\n        declarer: 'cpu',\n        selected: [a],\n        cpuFound: [b, c],\n        setFound: true,\n      })\n      clearInterval(this.cpuTimer)\n      this.cpuAnimation = setInterval(this.animateCpuChoice, 900)\n    }\n  }\n\n  animateCpuChoice = () => {\n    const { selected, cpuFound } = this.state\n    const cpuCopy = [...cpuFound]\n    const newSelected = [...selected, cpuCopy.pop()]\n    this.setState({\n      cpuFound: cpuCopy,\n      selected: newSelected,\n    })\n    if (newSelected.length === 3) {\n      clearInterval(this.cpuAnimation)\n      this.updateSelected(newSelected, 'cpu')\n    }\n  }\n\n  updatePlayerScore = (name: string, delta: number) => {\n    const { players } = this.state\n    const newScore = players[name].score + delta\n    const newPlayers = update(players, {\n      [name]: {\n        $merge: {\n          score: newScore,\n        },\n      },\n    })\n    return [newPlayers, newScore]\n  }\n\n  expireDeclare = () => {\n    const { declarer, selected } = this.state\n    if (!isSet(selected)) {\n      const [newPlayers] = this.updatePlayerScore(declarer, -0.5)\n      this.setState({\n        players: newPlayers,\n        declarer: null,\n        timeDeclared: null,\n        selected: [],\n      })\n    }\n  }\n\n  markPointForDeclarer = (declarer) => {\n    const [newPlayers, newScore] = this.updatePlayerScore(declarer, 1)\n    const { user } = this.props.userReducer\n    const gameOver = newScore >= config.playingTo && declarer\n    const newState = {\n      players: newPlayers,\n      gameOver,\n    }\n    if (gameOver && user !== null) {\n      const player_won = declarer == 'you' ? 1 : 0\n      const total_time = Math.round((new Date().getTime() - this.state.startTime.getTime()) / 1000)\n      axios\n        .post('/api/game', {\n          uid: user.uid,\n          total_time,\n          player_won,\n          difficulty_level: this.state.difficulty,\n          winning_score: newScore,\n        })\n        .then(() => {\n          console.log('Game sent')\n        })\n    }\n    this.setState(newState)\n  }\n\n  performDeclare = (declarer) => {\n    if (!this.state.declarer) {\n      const timeNow = new Date().getTime()\n      const update = {\n        declarer,\n        timeDeclared: timeNow,\n      }\n      this.setState(update)\n\n      this.undeclareID = setTimeout(() => {\n        this.expireDeclare()\n      }, config.turnTime)\n    }\n  }\n\n  updateSelected = (newSelected: Array<string>, declarer: string) => {\n    const newState = {\n      setFound: isSet(newSelected),\n      selected: newSelected,\n      declarer,\n    }\n    if (newState.setFound) {\n      clearTimeout(this.undeclareID)\n      setTimeout(() => {\n        this.removeSet()\n      }, 2000)\n    }\n    this.setState(newState)\n  }\n\n  handleCardClick = (card) => {\n    const { setFound, declarer, name } = this.state\n    if (!setFound && declarer !== 'cpu') {\n      const newSelected = cardToggle(card, this.state.selected)\n      if (!declarer) {\n        this.performDeclare(name)\n      }\n      this.setState({\n        selected: newSelected,\n      })\n      if (isSet(newSelected)) {\n        this.updateSelected(newSelected, 'you')\n      }\n    }\n  }\n\n  handleRedeal = () => {\n    const newState = reshuffle(this.state)\n    this.setState(newState)\n  }\n\n  removeSet = () => {\n    const { declarer, selected } = this.state\n    if (isSet(selected)) {\n      console.log('Set found, removing')\n      const newScores = this.markPointForDeclarer(declarer)\n      const newState = {\n        ...newScores,\n        setFound: false,\n        declarer: null,\n        timeDeclared: null,\n        ...removeSelectedCards(this.state),\n      }\n      this.setState(newState)\n    }\n    clearInterval(this.cpuTimer)\n    setTimeout(() => {\n      this.cpuTimer = setInterval(this.cpuTurn, this.state.cpuTurnInterval)\n    }, config.cpuDelay)\n  }\n\n  resetGame = () => {\n    clearInterval(this.cpuTimer)\n    this.setState({\n      ...cloneDeep(initialState),\n      ...createGameState(),\n    })\n  }\n\n  render() {\n    const { board, deck, selected, declarer, players, gameStarted, setFound } = this.state\n    const { userReducer } = this.props\n    const { user } = userReducer\n    if (userReducer.loading) {\n      return 'Loading...'\n    }\n    if (!gameStarted) {\n      return (\n        <div className=\"container\">\n          {user !== null && <Signout />}\n          <h3>Solo Play vs. Computer</h3>\n          <h4 className=\"orange-text text-darken-4\">Choose difficulty level:</h4>\n          <div className=\"row\">\n            <div className=\"col s8 m4\">\n              <form onSubmit={this.handleStartGame}>\n                <Slider\n                  ref={(input) => {\n                    this.difficultyInput = input\n                  }}\n                  min={1}\n                  max={5}\n                  orientation=\"horizontal\"\n                  tooltip={true}\n                  value={Number(this.state.difficulty)}\n                  onChange={(difficulty) => {\n                    const cpuTurnInterval = calculateIntervalFromDifficulty(difficulty)\n                    window.localStorage.setItem('soloDifficulty', difficulty)\n                    this.setState({\n                      cpuTurnInterval,\n                      difficulty,\n                    })\n                  }}\n                />\n                <input type=\"submit\" value=\"Start\" className=\"btn\" />\n              </form>\n            </div>\n            <div className=\"row\">\n              <div style={{ marginTop: '48px' }} className=\"col s12\">\n                <p>\n                  <Link to=\"/local\">Local Multiplayer</Link>\n                </p>\n                <p style={{ marginTop: '36px' }}>\n                  <Link to=\"/\">Back to Main Menu</Link>\n                </p>\n                {!user && (\n                  <Fragment>\n                    <hr />\n                    <p>To save your stats, sign in with your Google account.</p>\n\n                    <p>\n                      <button onClick={handleGoogleRedirect} className=\"btn\">\n                        Sign in\n                      </button>\n                    </p>\n                  </Fragment>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    }\n    return (\n      <React.Fragment>\n        <Board\n          board={board}\n          deck={deck}\n          selected={selected}\n          declarer={declarer}\n          handleCardClick={this.handleCardClick}\n          handleDeclare={this.handleDeclare}\n          handleRedeal={this.handleRedeal}\n          players={players}\n          setFound={this.state.setFound}\n          gameOver={this.state.gameOver}\n          myName={this.state.name}\n          resetGame={this.resetGame}\n          solo={true}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  userReducer: state.user,\n})\n\nexport default connect(mapStateToProps)(Solo)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Card from './Card'\n\nfunction Main() {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <h2 className=\"center-align\">Main Menu</h2>\n      </div>\n      <div className=\"row\">\n        <div className=\"col s8 offset-s2 m3 offset-m1\">\n          <Link to=\"/solo\">\n            <div className=\"card\">\n              <Card desc=\"0012\" />\n            </div>\n          </Link>\n          <p className=\"center-align\">Solo/Local</p>\n        </div>\n        <div className=\"col s8 offset-s2 m3\">\n          <Link to=\"/lobby\">\n            <div className=\"card\">\n              <Card desc=\"1121\" />\n            </div>\n          </Link>\n          <p className=\"center-align\">Join Game</p>\n        </div>\n        <div className=\"col s8 offset-s2 m3\">\n          <Link to=\"/host\">\n            <div className=\"card\">\n              <Card desc=\"2200\" />\n            </div>\n          </Link>\n          <p className=\"center-align\">Host Game</p>\n        </div>\n      </div>\n      {/* <div>\n        <hr />\n          <p>\n          <Link to=\"/rules\">Rules</Link>\n\n          </p>\n          <p>\n          <Link to=\"/stats\">Statistics</Link>\n\n          </p>\n\n      </div> */}\n    </div>\n  )\n}\n\nexport default Main\n","import React, { Component } from 'react'\nimport Card from './Card'\n\nfunction Rules() {\n  return (\n    <div className=\"rules container\">\n      <h2>Rules of the Game</h2>\n      <p>\n        The object of the same is to find a sets of three cards that are either the same or\n        different along each of four dimensions.\n      </p>\n      <p>\n        If that makes perfect sense to you, then go ahead and start playing. Otherwise, I will\n        explain a bit more.\n      </p>\n      <p>The game starts by laying out a board with twelve cards. Here are some example cards: </p>\n      <div className=\"row\">\n        <div className=\"col s4\">\n          <div className=\"card\">\n            <Card desc=\"0000\" />\n          </div>\n        </div>\n        <div className=\"col s4\">\n          <div className=\"card\">\n            <Card desc=\"1210\" />\n          </div>\n        </div>\n        <div className=\"col s4\">\n          <div className=\"card\">\n            <Card desc=\"0022\" />\n          </div>\n        </div>\n        <div className=\"col s4\">\n          <div className=\"card\">\n            <Card desc=\"2101\" />\n          </div>\n        </div>\n        <div className=\"col s4\">\n          <div className=\"card\">\n            <Card desc=\"0120\" />\n          </div>\n        </div>\n        <div className=\"col s4\">\n          <div className=\"card\">\n            <Card desc=\"2011\" />\n          </div>\n        </div>\n      </div>\n      <p>\n        You'll notice that every card has four different characteristics:\n        <ul className=\"browser-default\">\n          <li>color</li>\n          <li>number</li>\n          <li>shape</li>\n          <li>fill</li>\n        </ul>\n        and each of those characteristics has three different possibilities.\n      </p>\n      <p>\n        Three cards form a set if, for each of those four characteristics, the three cards are\n        either <em>all the same</em> or <em>all different.</em>\n      </p>\n      <p>It is easier to understand with examples, so here is an example set:</p>\n      <div className=\"row\">\n        <div className=\"col s4\">\n          <div className=\"card\">\n            <Card desc=\"0112\" />\n          </div>\n        </div>{' '}\n        <div className=\"col s4\">\n          <div className=\"card\">\n            <Card desc=\"1111\" />\n          </div>\n        </div>\n        <div className=\"col s4\">\n          <div className=\"card\">\n            <Card desc=\"2110\" />\n          </div>\n        </div>\n      </div>\n      <p>\n        Which you can describe as follows:\n        <ul className=\"browser-default\">\n          <li>color - SAME</li>\n          <li>shape - SAME</li>\n          <li>number - DIFFERENT</li>\n          <li>fill - DIFFERENT</li>\n        </ul>\n        Therefore, the three cards form a set.\n      </p>\n      <p>Here is another set:</p>\n      <div className=\"row\">\n        <div className=\"col s4\">\n          <div className=\"card\">\n            <Card desc=\"2022\" />\n          </div>\n        </div>\n        <div className=\"col s4\">\n          <div className=\"card\">\n            <Card desc=\"1112\" />\n          </div>\n        </div>\n        <div className=\"col s4\">\n          <div className=\"card\">\n            <Card desc=\"0202\" />\n          </div>\n        </div>\n      </div>\n      <p>\n        <ul className=\"browser-default\">\n          <li>color - DIFFERENT</li>\n          <li>shape - DIFFERENT</li>\n          <li>number - DIFFERENT</li>\n          <li>fill - SAME</li>\n        </ul>\n      </p>\n      <p>This is not a set:</p>\n      <div className=\"row\">\n        <div className=\"col s4\">\n          <div className=\"card\">\n            <Card desc=\"1220\" />\n          </div>\n        </div>\n        <div className=\"col s4\">\n          <div className=\"card\">\n            <Card desc=\"1110\" />\n          </div>\n        </div>\n        <div className=\"col s4\">\n          <div className=\"card\">\n            <Card desc=\"2000\" />\n          </div>\n        </div>\n      </div>\n      <p>\n        <ul className=\"browser-default\">\n          <li>fill - SAME</li>\n          <li>color - DIFFERENT</li>\n          <li>shape - DIFFERENT</li>\n          <li>number - NOT THE SAME OR DIFFERENT!</li>\n        </ul>\n        Even though the cards have the same fill, different colors, and different shapes, the\n        numbers are neither <em>all the same</em> nor <em>all different</em>, so it's not a set.\n      </p>\n      <p>\n        It doesn't matter how many of the characteristics are the same, and how many are different,\n        as long as for <em>each</em> characteristic, the cards are all the same or all different.\n        Here's one last example:\n      </p>\n      <div className=\"row\">\n        <div className=\"col s4\">\n          <div className=\"card\">\n            <Card desc=\"1122\" />\n          </div>\n        </div>\n        <div className=\"col s4\">\n          <div className=\"card\">\n            <Card desc=\"0201\" />\n          </div>\n        </div>\n        <div className=\"col s4\">\n          <div className=\"card\">\n            <Card desc=\"2010\" />\n          </div>\n        </div>\n      </div>\n      <p>\n        <ul className=\"browser-default\">\n          <li>color - DIFFERENT</li>\n          <li>shape - DIFFERENT</li>\n          <li>number - DIFFERENT</li>\n          <li>fill - DIFFERENT</li>\n        </ul>\n        Each characteristic is different for all three cards, so this is a set.\n      </p>\n    </div>\n  )\n}\n\nexport default Rules\n","import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Signout from './Signout'\nimport { handleGoogleRedirect } from '../utils/helpers'\nimport * as firebase from 'firebase/app'\nimport 'firebase/auth'\n\n\nfunction Login(props) {\n  const user = useSelector((state) => state.user)\n\n  useEffect(() => {\n    firebase\n      .auth()\n      .getRedirectResult()\n      .then(function(result) {\n        if (result.credential) {\n          // This gives you a Google Access Token. You can use it to access the Google API.\n          var token = result.credential.accessToken\n          // ...\n        }\n        // The signed-in user info.\n        var user = result.user\n        console.log(token, user)\n      })\n      .catch(function(error) {\n        // Handle Errors here.\n        var errorCode = error.code\n        var errorMessage = error.message\n        // The email of the user's account used.\n        var email = error.email\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential\n        // ...\n      })\n  }, [])\n\n  if (!user) {\n    return (\n      <div className=\"container\">\n        <button onClick={handleGoogleRedirect} className=\"btn\">\n          Sign in\n        </button>\n      </div>\n    )\n  }\n  return (\n    <div className=\"container\">\n      <Signout />\n    </div>\n  )\n}\n\nexport default Login\n","import React, { Component } from 'react'\nimport Board from './Board'\nimport {\n  makeDeck,\n  cardToggle,\n  reshuffle,\n  removeSelected as removeSelectedCards,\n  isSet,\n  nameThird,\n} from '../utils/helpers'\nimport { shuffle, cloneDeep } from 'lodash'\nimport { colors } from '../config'\nimport update from 'immutability-helper'\nimport { Link } from 'react-router-dom'\n\nconst debugging = false\n\nconst config = {\n  declareTime: 5000,\n  colors,\n  playingTo: 6,\n  cpuDelay: 1200,\n}\n\nconst createGameState = () => {\n  const initialDeck = makeDeck()\n  return {\n    ...reshuffle({\n      deck: initialDeck.slice(12),\n      board: initialDeck.slice(0, 12),\n    }),\n    selected: [],\n  }\n}\n\nconst createPlayers = (num) => {\n  const players = {}\n  for (let i = 0; i < num; i++) {\n    players[i] = {\n      score: 0,\n      color: config.colors[i],\n    }\n  }\n  return players\n}\n\nconst initialState = {\n  numPlayers: null,\n  players: createPlayers(2),\n  gameStarted: false,\n  name: '1',\n  setFound: false,\n  declarer: null,\n  timeDeclared: null,\n  gameOver: false,\n  difficulty: 2,\n  cpuTurnInterval: 1000,\n  cpuFound: [],\n}\n\nclass SharedDevice extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      ...cloneDeep(initialState),\n      ...createGameState(),\n    }\n  }\n\n  handleStartGame = (numPlayers) => {\n    this.setState({\n      numPlayers,\n      players: createPlayers(numPlayers),\n    })\n    this.setState({\n      gameStarted: true,\n    })\n  }\n\n  updatePlayerScore = (name, delta) => {\n    const { players } = this.state\n    const newScore = players[name].score + delta\n    const newPlayers = update(players, {\n      [name]: {\n        $merge: {\n          score: newScore,\n        },\n      },\n    })\n    return [newPlayers, newScore]\n  }\n\n  expireDeclare = () => {\n    const { declarer, selected } = this.state\n    if (!isSet(selected)) {\n      const [newPlayers] = this.updatePlayerScore(declarer, -.5)\n      this.setState({\n        players: newPlayers,\n        declarer: null,\n        timeDeclared: null,\n        selected: [],\n      })\n    }\n  }\n\n  markPointForDeclarer = (declarer) => {\n    const [newPlayers, newScore] = this.updatePlayerScore(declarer, 1)\n    const gameOver = newScore >= config.playingTo && declarer\n    const newState = {\n      players: newPlayers,\n      gameOver,\n    }\n    this.setState(newState)\n  }\n\n  performDeclare = (declarer) => {\n    if (!this.state.declarer) {\n      const timeNow = new Date().getTime()\n      const update = {\n        declarer,\n        timeDeclared: timeNow,\n      }\n      this.setState(update)\n\n      this.undeclareID = setTimeout(() => {\n        this.expireDeclare()\n      }, config.declareTime)\n    }\n  }\n\n  updateSelected = (newSelected, declarer) => {\n    const newState = {\n      setFound: isSet(newSelected),\n      selected: newSelected,\n      declarer,\n    }\n    if (newState.setFound) {\n      clearTimeout(this.undeclareID)\n      setTimeout(() => {\n        this.removeSet()\n      }, 2000)\n    }\n    this.setState(newState)\n  }\n\n  handleCardClick = (card) => {\n    const { setFound, declarer } = this.state\n    if (!setFound && declarer !== null) {\n      const newSelected = cardToggle(card, this.state.selected)\n      this.setState({\n        selected: newSelected,\n      })\n      if (isSet(newSelected)) {\n        this.updateSelected(newSelected, declarer)\n      }\n    }\n  }\n\n  handlePlayerClick = (clickerName) => {\n    const { declarer } = this.state\n    if (declarer === null) {\n      this.performDeclare(clickerName)\n    }\n  }\n\n  handleRedeal = () => {\n    const newState = reshuffle(this.state)\n    this.setState(newState)\n  }\n\n  removeSet = () => {\n    const { declarer, selected } = this.state\n    if (isSet(selected)) {\n      console.log('Set found, removing')\n      const newScores = this.markPointForDeclarer(declarer)\n      const newState = {\n        ...newScores,\n        setFound: false,\n        declarer: null,\n        timeDeclared: null,\n        ...removeSelectedCards(this.state),\n      }\n      this.setState(newState)\n    }\n    clearInterval(this.cpuTimer)\n    setTimeout(() => {\n      this.cpuTimer = setInterval(this.cpuTurn, this.state.cpuTurnInterval)\n    }, config.cpuDelay)\n  }\n\n  resetGame = () => {\n    clearInterval(this.cpuTimer)\n    this.setState({\n      ...cloneDeep(initialState),\n      ...createGameState(),\n    })\n  }\n\n  render() {\n    const { board, deck, selected, declarer, players, numPlayers, setFound } = this.state\n    if (!numPlayers) {\n      return (\n        <div className=\"container\">\n          <h4>Choose Number of Players</h4>\n          <div className=\"row\">\n            <div className=\"col s12\">\n              {[...Array(6).keys()].map((i) => {\n                return (\n                  <div key={`players-${i}`} className=\"col s4 player-number\">\n                    <div\n                      onClick={() => {\n                        this.handleStartGame(i + 1)\n                      }}\n                      className=\"btn-large\"\n                    >\n                      {i + 1}\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n            <div>\n              <p>\n                <Link to=\"/solo\">Back</Link>\n              </p>\n            </div>\n          </div>\n        </div>\n      )\n    }\n    return (\n      <React.Fragment>\n        <Board\n          board={board}\n          deck={deck}\n          selected={selected}\n          declarer={declarer}\n          handleCardClick={this.handleCardClick}\n          handlePlayerClick={this.handlePlayerClick}\n          handleDeclare={this.handleDeclare}\n          players={players}\n          setFound={this.state.setFound}\n          gameOver={this.state.gameOver}\n          myName={this.state.name}\n          resetGame={this.resetGame}\n          solo={true}\n          sharedDevice={true}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default SharedDevice\n","import React, { useState, useEffect } from 'react'\nimport Routes from './Routes'\nimport { updateUser, updateNickname } from '../redux-helpers'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport axios from 'axios'\n\nfunction Stats(props) {\n  const userReducer = useSelector((state) => state.user)\n  const { user } = userReducer\n  const [stats, setStats] = useState(null)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const getStats = async () => {\n      axios.get(`/api/user/stats/${user.uid}`).then((response) => {\n        setStats(response.data)\n      })\n    }\n\n    if (!userReducer.loading && user !== null) {\n      getStats()\n    }\n  }, [userReducer.loading])\n\n  if (userReducer.loading) {\n    return 'Loading...'\n  }\n\n  console.log(stats)\n\n  if (user === null) {\n    return <div>Sign in to view stats</div>\n  }\n\n  return (\n    <div className=\"container\">\n      <h3>Statistics</h3>\n      <table className=\"striped\">\n        <thead>\n          <tr>\n            <th>Difficulty</th>\n            <th>Games Played</th>\n            <th>Winning Percentage</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {stats &&\n            stats.map((row, i) => {\n              return (\n                <tr key={`stats-${i}`}>\n                  <td>{row.difficulty_level}</td>\n                  <td>{row.games_played}</td>\n                  <td>{Math.round(100 * (row.games_won / row.games_played))}</td>\n                </tr>\n              )\n            })}\n        </tbody>\n      </table>\n      <p>\n        <Link to=\"/\">Main Menu</Link>\n      </p>\n    </div>\n  )\n}\n\nexport default Stats\n","import React, { Component, Fragment } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport Host from './Host'\nimport Guest from './Guest'\nimport Lobby from './Lobby'\nimport Solo from './Solo'\nimport Main from './Main'\nimport Rules from './Rules'\nimport Login from './Login'\nimport SharedDevice from './SharedDevice'\nimport Stats from './Stats'\n\nclass Routes extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Main} />\n            <Route path=\"/host\" component={Host} />\n            <Route path=\"/lobby\" component={Lobby} />\n            <Route path=\"/guest/:gameName\" component={Guest} />\n            <Route path=\"/solo\" component={Solo} />\n            <Route path=\"/local\" component={SharedDevice} />\n            <Route path=\"/rules\" component={Rules} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/stats\" component={Stats} />\n          </Switch>\n        </Router>\n      </Fragment>\n    )\n  }\n}\n\nexport default Routes\n","import React, { useState, useEffect } from 'react'\nimport Routes from './Routes'\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\n// import 'firebase/firestore'\n// import firestore from '../firestore'\nimport { updateUser, updateNickname } from '../redux-helpers'\nimport { useDispatch } from 'react-redux'\nimport axios from 'axios'\n\nfunction App(props) {\n  const [user, setUser] = useState(null)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        const nickname = window.localStorage.getItem('nickname') || user.displayName.split(' ')[0]\n        const myUser = {\n          displayName: user.displayName,\n          email: user.email,\n          emailVerified: user.emailVerified,\n          photoURL: user.photoURL,\n          isAnonymous: user.isAnonymous,\n          uid: user.uid,\n          providerData: user.providerData,\n          nickname,\n        }\n        dispatch(updateUser({ loading: false, user: myUser }))\n        axios\n          .get(`/api/user/${user.uid}`)\n          .then((result) => {\n            console.log('User is registered')\n          })\n          .catch((err) => {\n            if (err.response && err.response.status === 404) {\n              console.log('User not registered')\n              axios\n                .post('/api/user', {\n                  uid: user.uid,\n                  info: myUser,\n                })\n                .then(() => {\n                  console.log('User registered successfully')\n                })\n                .catch((err) => {\n                  console.log('Error registering user', err)\n                })\n            } else {\n              console.log('An error occurred trying to GET user info')\n            }\n          })\n      } else {\n        console.log('Not signed in')\n        dispatch(updateUser({ loading: false, user: null }))\n      }\n    })\n  }, [])\n\n  return <Routes />\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.scss'\nimport App from './components/App'\nimport { Provider } from 'react-redux'\nimport store from './redux-helpers'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}